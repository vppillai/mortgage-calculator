{"version":3,"file":"index-DnkUMU1J.js","sources":["../../src/utils/constants.js","../../src/services/storage.js","../../src/utils/eventBus.js","../../src/utils/logger.js","../../src/utils/decimal-wrapper.js","../../src/utils/errors.js","../../src/services/mortgageCalculator.js","../../src/services/prepaymentCalculator.js","../../src/services/currencyFormatter.js","../../src/services/validation.js","../../src/utils/expressionEvaluator.js","../../src/services/urlShareService.js","../../src/components/CalculatorModern.js","../../src/components/AmortizationSchedule.js","../../src/components/InfoModal.js","../../src/main.js"],"sourcesContent":["/**\n * Canadian Mortgage Calculator Constants\n * These constants define Canadian mortgage rules and regulations\n */\n\nexport const MORTGAGE_CONSTANTS = {\n    // Amortization limits\n    MAX_AMORTIZATION_HIGH_RATIO: 300, // 25 years in months (LTV > 80%)\n    MAX_AMORTIZATION_CONVENTIONAL: 360, // 30 years in months (LTV <= 80%)\n    MIN_AMORTIZATION: 12, // 1 year minimum\n\n    // Interest rate limits\n    MIN_INTEREST_RATE: 0.01, // 0.01%\n    MAX_INTEREST_RATE: 30.0, // 30%\n\n    // Principal limits\n    MIN_PRINCIPAL: 1000, // $1,000 CAD minimum\n    MAX_PRINCIPAL: 10000000, // $10M CAD\n\n    // Down payment requirements (by property value)\n    MIN_DOWN_PAYMENT_UNDER_500K: 0.05, // 5% for first $500k\n    MIN_DOWN_PAYMENT_500K_TO_1M: 0.10, // 10% for $500k-$1M\n    MIN_DOWN_PAYMENT_OVER_1M: 0.20, // 20% for over $1M\n\n    // Payment frequencies\n    PAYMENT_FREQUENCIES: {\n        MONTHLY: 'monthly',\n        BI_WEEKLY: 'bi-weekly',\n        WEEKLY: 'weekly',\n    },\n\n    // Payments per year by frequency\n    PAYMENTS_PER_YEAR: {\n        monthly: 12,\n        'bi-weekly': 26,\n        weekly: 52,\n    },\n\n    // Canadian compounding\n    COMPOUNDING_PERIODS_PER_YEAR: 2, // Semi-annual compounding\n\n    // Prepayment frequencies\n    PREPAYMENT_FREQUENCIES: {\n        PER_PAYMENT: 'per-payment',\n        ANNUAL: 'annual',\n        ONE_TIME: 'one-time',\n    },\n\n    // UI Constants\n    MAX_COMPARISON_SCENARIOS: 5,\n    DEFAULT_PAYMENT_FREQUENCY: 'monthly',\n\n    // Storage keys\n    STORAGE_KEYS: {\n        SCENARIOS: 'mortgage-calc-scenarios',\n        COMPARISONS: 'mortgage-calc-comparisons',\n        PREFERENCES: 'mortgage-calc-preferences',\n        CURRENT: 'mortgage-calc-current',\n    },\n\n    // Error codes\n    ERROR_CODES: {\n        INVALID_PRINCIPAL: 'INVALID_PRINCIPAL',\n        INVALID_RATE: 'INVALID_RATE',\n        INVALID_TERM: 'INVALID_TERM',\n        CALCULATION_ERROR: 'CALCULATION_ERROR',\n        COMPARISON_FULL: 'COMPARISON_FULL',\n        STORAGE_ERROR: 'STORAGE_ERROR',\n    },\n};\n\nexport default MORTGAGE_CONSTANTS;\n\n","/**\n * LocalStorage service for persisting mortgage scenarios and preferences\n */\n\nimport { MORTGAGE_CONSTANTS } from '../utils/constants.js';\n\nclass StorageService {\n    constructor() {\n        this.keys = MORTGAGE_CONSTANTS.STORAGE_KEYS;\n    }\n\n    /**\n     * Check if localStorage is available\n     * @returns {boolean}\n     */\n    isAvailable() {\n        try {\n            const test = '__storage_test__';\n            localStorage.setItem(test, test);\n            localStorage.removeItem(test);\n            return true;\n        } catch (e) {\n            return false;\n        }\n    }\n\n    /**\n     * Get item from localStorage\n     * @param {string} key\n     * @returns {any|null}\n     */\n    get(key) {\n        if (!this.isAvailable()) return null;\n\n        try {\n            const item = localStorage.getItem(key);\n            return item ? JSON.parse(item) : null;\n        } catch (error) {\n            console.error(`Error reading from localStorage: ${key}`, error);\n            return null;\n        }\n    }\n\n    /**\n     * Set item in localStorage\n     * @param {string} key\n     * @param {any} value\n     * @returns {boolean} Success status\n     */\n    set(key, value) {\n        if (!this.isAvailable()) return false;\n\n        try {\n            localStorage.setItem(key, JSON.stringify(value));\n            return true;\n        } catch (error) {\n            console.error(`Error writing to localStorage: ${key}`, error);\n            return false;\n        }\n    }\n\n    /**\n     * Remove item from localStorage\n     * @param {string} key\n     * @returns {boolean}\n     */\n    remove(key) {\n        if (!this.isAvailable()) return false;\n\n        try {\n            localStorage.removeItem(key);\n            return true;\n        } catch (error) {\n            console.error(`Error removing from localStorage: ${key}`, error);\n            return false;\n        }\n    }\n\n    /**\n     * Clear all mortgage calculator data\n     */\n    clear() {\n        if (!this.isAvailable()) return;\n\n        Object.values(this.keys).forEach((key) => {\n            this.remove(key);\n        });\n    }\n\n    // Domain-specific methods\n\n    /**\n     * Save mortgage scenarios\n     * @param {Array} scenarios\n     */\n    saveScenarios(scenarios) {\n        return this.set(this.keys.SCENARIOS, scenarios);\n    }\n\n    /**\n     * Get saved scenarios\n     * @returns {Array}\n     */\n    getScenarios() {\n        return this.get(this.keys.SCENARIOS) || [];\n    }\n\n    /**\n     * Save comparison tables\n     * @param {Array} comparisons\n     */\n    saveComparisons(comparisons) {\n        return this.set(this.keys.COMPARISONS, comparisons);\n    }\n\n    /**\n     * Get saved comparisons\n     * @returns {Array}\n     */\n    getComparisons() {\n        return this.get(this.keys.COMPARISONS) || [];\n    }\n\n    /**\n     * Save user preferences\n     * @param {Object} preferences\n     */\n    savePreferences(preferences) {\n        return this.set(this.keys.PREFERENCES, preferences);\n    }\n\n    /**\n     * Get user preferences\n     * @returns {Object}\n     */\n    getPreferences() {\n        return (\n            this.get(this.keys.PREFERENCES) || {\n                theme: 'system',\n                locale: 'en-CA',\n                defaultPaymentFrequency: 'monthly',\n                showAdvancedOptions: false,\n            }\n        );\n    }\n\n    /**\n     * Save current working scenario\n     * @param {Object} scenario\n     */\n    saveCurrent(scenario) {\n        return this.set(this.keys.CURRENT, scenario);\n    }\n\n    /**\n     * Get current working scenario\n     * @returns {Object|null}\n     */\n    getCurrent() {\n        return this.get(this.keys.CURRENT);\n    }\n}\n\nexport default new StorageService();\n\n","/**\n * Event Bus for component communication\n * Simple pub/sub pattern for decoupled components\n */\n\nclass EventBus {\n    constructor() {\n        this.events = {};\n    }\n\n    /**\n     * Subscribe to an event\n     * @param {string} event - Event name\n     * @param {Function} callback - Callback function\n     * @returns {Function} Unsubscribe function\n     */\n    on(event, callback) {\n        if (!this.events[event]) {\n            this.events[event] = [];\n        }\n\n        this.events[event].push(callback);\n\n        // Return unsubscribe function\n        return () => {\n            this.events[event] = this.events[event].filter((cb) => cb !== callback);\n        };\n    }\n\n    /**\n     * Subscribe to an event once\n     * @param {string} event - Event name\n     * @param {Function} callback - Callback function\n     */\n    once(event, callback) {\n        const onceCallback = (...args) => {\n            callback(...args);\n            this.off(event, onceCallback);\n        };\n\n        this.on(event, onceCallback);\n    }\n\n    /**\n     * Unsubscribe from an event\n     * @param {string} event - Event name\n     * @param {Function} callback - Callback function\n     */\n    off(event, callback) {\n        if (!this.events[event]) return;\n\n        this.events[event] = this.events[event].filter((cb) => cb !== callback);\n    }\n\n    /**\n     * Emit an event\n     * @param {string} event - Event name\n     * @param {*} data - Event data\n     */\n    emit(event, data) {\n        if (!this.events[event]) return;\n\n        this.events[event].forEach((callback) => {\n            try {\n                callback(data);\n            } catch (error) {\n                console.error(`Error in event handler for ${event}:`, error);\n            }\n        });\n    }\n\n    /**\n     * Clear all event listeners\n     */\n    clear() {\n        this.events = {};\n    }\n\n    /**\n     * Get all subscribers for an event\n     * @param {string} event\n     * @returns {number}\n     */\n    listenerCount(event) {\n        return this.events[event] ? this.events[event].length : 0;\n    }\n}\n\n// Event names as constants\nexport const EVENTS = {\n    CALCULATION_COMPLETE: 'calculation:complete', // Used by CalculatorModern\n    THEME_CHANGED: 'theme:changed',\n    ERROR_OCCURRED: 'error:occurred',\n    NOTIFICATION: 'notification:show',\n};\n\nexport default new EventBus();\n\n","/**\n * Logging service for debugging and monitoring\n */\n\nconst LOG_LEVELS = {\n    DEBUG: 0,\n    INFO: 1,\n    WARN: 2,\n    ERROR: 3,\n};\n\nclass Logger {\n    constructor() {\n        this.level = process.env.NODE_ENV === 'production' ? LOG_LEVELS.WARN : LOG_LEVELS.DEBUG;\n        this.logs = [];\n        this.maxLogs = 100;\n    }\n\n    /**\n     * Set logging level\n     * @param {string} level - DEBUG, INFO, WARN, or ERROR\n     */\n    setLevel(level) {\n        this.level = LOG_LEVELS[level] || LOG_LEVELS.INFO;\n    }\n\n    /**\n     * Log debug message\n     * @param {string} message\n     * @param {*} data\n     */\n    debug(message, data) {\n        if (this.level <= LOG_LEVELS.DEBUG) {\n            console.debug(`[DEBUG] ${message}`, data || '');\n            this.addLog('DEBUG', message, data);\n        }\n    }\n\n    /**\n     * Log info message\n     * @param {string} message\n     * @param {*} data\n     */\n    info(message, data) {\n        if (this.level <= LOG_LEVELS.INFO) {\n            console.log(`[INFO] ${message}`, data || '');\n            this.addLog('INFO', message, data);\n        }\n    }\n\n    /**\n     * Log warning\n     * @param {string} message\n     * @param {*} data\n     */\n    warn(message, data) {\n        if (this.level <= LOG_LEVELS.WARN) {\n            console.warn(`[WARN] ${message}`, data || '');\n            this.addLog('WARN', message, data);\n        }\n    }\n\n    /**\n     * Log error\n     * @param {string} message\n     * @param {Error|*} error\n     */\n    error(message, error) {\n        if (this.level <= LOG_LEVELS.ERROR) {\n            console.error(`[ERROR] ${message}`, error || '');\n            this.addLog('ERROR', message, error);\n        }\n    }\n\n    /**\n     * Add log entry to history\n     * @private\n     */\n    addLog(level, message, data) {\n        this.logs.push({\n            level,\n            message,\n            data,\n            timestamp: new Date().toISOString(),\n        });\n\n        // Keep only recent logs\n        if (this.logs.length > this.maxLogs) {\n            this.logs.shift();\n        }\n    }\n\n    /**\n     * Get all logs\n     * @returns {Array}\n     */\n    getLogs() {\n        return [...this.logs];\n    }\n\n    /**\n     * Clear all logs\n     */\n    clearLogs() {\n        this.logs = [];\n    }\n\n    /**\n     * Export logs as JSON\n     * @returns {string}\n     */\n    exportLogs() {\n        return JSON.stringify(this.logs, null, 2);\n    }\n}\n\nexport default new Logger();\n\n","/**\n * Decimal.js wrapper for precise financial calculations\n * Prevents floating-point arithmetic errors\n */\n\nimport Decimal from 'decimal.js';\n\n// Configure Decimal.js for financial calculations\nDecimal.set({\n    precision: 20,\n    rounding: Decimal.ROUND_HALF_UP,\n    toExpNeg: -7,\n    toExpPos: 21,\n    minE: -9e15,\n    maxE: 9e15,\n});\n\n/**\n * Creates a Decimal instance from a number or string\n * @param {number|string} value - The value to convert\n * @returns {Decimal} Decimal instance\n */\nexport function decimal(value) {\n    return new Decimal(value);\n}\n\n/**\n * Adds two numbers with precision\n * @param {number|string|Decimal} a\n * @param {number|string|Decimal} b\n * @returns {Decimal}\n */\nexport function add(a, b) {\n    return decimal(a).plus(decimal(b));\n}\n\n/**\n * Subtracts b from a with precision\n * @param {number|string|Decimal} a\n * @param {number|string|Decimal} b\n * @returns {Decimal}\n */\nexport function subtract(a, b) {\n    return decimal(a).minus(decimal(b));\n}\n\n/**\n * Multiplies two numbers with precision\n * @param {number|string|Decimal} a\n * @param {number|string|Decimal} b\n * @returns {Decimal}\n */\nexport function multiply(a, b) {\n    return decimal(a).times(decimal(b));\n}\n\n/**\n * Divides a by b with precision\n * @param {number|string|Decimal} a\n * @param {number|string|Decimal} b\n * @returns {Decimal}\n */\nexport function divide(a, b) {\n    return decimal(a).dividedBy(decimal(b));\n}\n\n/**\n * Raises a to the power of b with precision\n * @param {number|string|Decimal} a - Base\n * @param {number|string|Decimal} b - Exponent\n * @returns {Decimal}\n */\nexport function power(a, b) {\n    return decimal(a).pow(decimal(b));\n}\n\n/**\n * Rounds a number to specified decimal places\n * @param {number|string|Decimal} value\n * @param {number} decimalPlaces\n * @returns {number}\n */\nexport function round(value, decimalPlaces = 2) {\n    return decimal(value).toDecimalPlaces(decimalPlaces).toNumber();\n}\n\n/**\n * Converts Decimal to number\n * @param {Decimal} value\n * @returns {number}\n */\nexport function toNumber(value) {\n    return value.toNumber();\n}\n\n/**\n * Formats a number as currency (CAD)\n * @param {number|string|Decimal} value\n * @returns {string}\n */\nexport function toCurrency(value) {\n    const num = decimal(value).toNumber();\n    return new Intl.NumberFormat('en-CA', {\n        style: 'currency',\n        currency: 'CAD',\n        minimumFractionDigits: 2,\n        maximumFractionDigits: 2,\n    }).format(num);\n}\n\nexport default {\n    decimal,\n    add,\n    subtract,\n    multiply,\n    divide,\n    power,\n    round,\n    toNumber,\n    toCurrency,\n    Decimal,\n};\n\n","/**\n * Custom error classes and error handling utilities\n */\n\nimport { MORTGAGE_CONSTANTS } from './constants.js';\n\n/**\n * Base error class for mortgage calculator\n */\nexport class MortgageCalculatorError extends Error {\n    constructor(message, code) {\n        super(message);\n        this.name = 'MortgageCalculatorError';\n        this.code = code;\n    }\n}\n\n/**\n * Validation error\n */\nexport class ValidationError extends MortgageCalculatorError {\n    constructor(field, message, value) {\n        super(message, MORTGAGE_CONSTANTS.ERROR_CODES.INVALID_PRINCIPAL);\n        this.name = 'ValidationError';\n        this.field = field;\n        this.value = value;\n    }\n}\n\n/**\n * Calculation error\n */\nexport class CalculationError extends MortgageCalculatorError {\n    constructor(message) {\n        super(message, MORTGAGE_CONSTANTS.ERROR_CODES.CALCULATION_ERROR);\n        this.name = 'CalculationError';\n    }\n}\n\n/**\n * Storage error\n */\nexport class StorageError extends MortgageCalculatorError {\n    constructor(message) {\n        super(message, MORTGAGE_CONSTANTS.ERROR_CODES.STORAGE_ERROR);\n        this.name = 'StorageError';\n    }\n}\n\n/**\n * Format error for user display\n * @param {Error} error\n * @returns {string}\n */\nexport function formatErrorMessage(error) {\n    if (error instanceof ValidationError) {\n        return error.message;\n    }\n\n    if (error instanceof CalculationError) {\n        return `Calculation error: ${error.message}`;\n    }\n\n    if (error instanceof StorageError) {\n        return `Storage error: ${error.message}. Your data may not be saved.`;\n    }\n\n    return `An unexpected error occurred: ${error.message}`;\n}\n\n/**\n * Log error with context\n * @param {Error} error\n * @param {Object} context\n */\nexport function logError(error, context = {}) {\n    console.error('[Mortgage Calculator Error]', {\n        name: error.name,\n        message: error.message,\n        code: error.code,\n        stack: error.stack,\n        ...context,\n    });\n}\n\nexport default {\n    MortgageCalculatorError,\n    ValidationError,\n    CalculationError,\n    StorageError,\n    formatErrorMessage,\n    logError,\n};\n\n","/**\n * Mortgage Calculator Service\n * Implements Canadian mortgage calculations with semi-annual compounding\n */\n\nimport { decimal, add, subtract, multiply, divide, power, round } from '../utils/decimal-wrapper.js';\nimport { MORTGAGE_CONSTANTS } from '../utils/constants.js';\nimport { CalculationError } from '../utils/errors.js';\n\n/**\n * Calculate mortgage payment using Canadian PMT formula\n * @param {Object} params - Mortgage parameters\n * @returns {Object} Calculation results\n */\nexport function calculateMortgage(params) {\n    try {\n        const { principal, interestRate, amortizationMonths, paymentFrequency } = params;\n\n        // Convert annual rate to decimal\n        const annualRate = divide(interestRate, 100);\n\n        // Canadian semi-annual compounding\n        const semiAnnualRate = divide(annualRate, 2);\n\n        // Determine payments per year\n        const paymentsPerYear = MORTGAGE_CONSTANTS.PAYMENTS_PER_YEAR[paymentFrequency];\n\n        // Convert semi-annual rate to effective annual rate\n        // effectiveAnnual = (1 + semiAnnualRate)^2 - 1\n        const onePlusSemi = add(1, semiAnnualRate);\n        const effectiveAnnual = subtract(power(onePlusSemi, 2), 1);\n\n        // Convert effective annual rate to payment period rate\n        // periodRate = (1 + effectiveAnnual)^(1/paymentsPerYear) - 1\n        const onePlusAnnual = add(1, effectiveAnnual);\n        const periodRate = subtract(power(onePlusAnnual, divide(1, paymentsPerYear)), 1);\n\n        // Total number of payments\n        const totalPayments = multiply(amortizationMonths, divide(paymentsPerYear, 12));\n\n        // PMT formula: P * (r * (1 + r)^n) / ((1 + r)^n - 1)\n        const onePlusR = add(1, periodRate);\n        const onePlusRPowN = power(onePlusR, totalPayments);\n\n        const numerator = multiply(periodRate, onePlusRPowN);\n        const denominator = subtract(onePlusRPowN, 1);\n\n        const payment = multiply(principal, divide(numerator, denominator));\n\n        // Calculate totals\n        const totalPaid = multiply(payment, totalPayments);\n        const totalInterest = subtract(totalPaid, principal);\n\n        // Calculate payoff date (approximate)\n        const today = new Date();\n        const payoffDate = new Date(today);\n        payoffDate.setMonth(payoffDate.getMonth() + parseInt(amortizationMonths));\n\n        return {\n            regularPayment: round(payment, 2),\n            totalPayments: round(totalPayments, 0),\n            totalInterest: round(totalInterest, 2),\n            totalCost: round(totalPaid, 2),\n            payoffDate: payoffDate.toISOString().split('T')[0],\n            effectiveRate: round(periodRate, 6),\n        };\n    } catch (error) {\n        throw new CalculationError(`Failed to calculate mortgage: ${error.message}`);\n    }\n}\n\n/**\n * Generate amortization schedule\n * @param {Object} params - Mortgage parameters\n * @returns {Array} Payment schedule\n */\nexport function generateAmortizationSchedule(params) {\n    const { principal, interestRate, amortizationMonths, paymentFrequency } = params;\n\n    const result = calculateMortgage(params);\n    const payment = decimal(result.regularPayment);\n\n    const schedule = [];\n    let balance = decimal(principal);\n\n    const annualRate = divide(interestRate, 100);\n    const semiAnnualRate = divide(annualRate, 2);\n    const onePlusSemi = add(1, semiAnnualRate);\n    const effectiveAnnual = subtract(power(onePlusSemi, 2), 1);\n\n    const paymentsPerYear = MORTGAGE_CONSTANTS.PAYMENTS_PER_YEAR[paymentFrequency];\n    const onePlusAnnual = add(1, effectiveAnnual);\n    const periodRate = subtract(power(onePlusAnnual, divide(1, paymentsPerYear)), 1);\n\n    const totalPayments = Math.ceil(result.totalPayments);\n    const today = new Date();\n\n    for (let i = 1; i <= totalPayments; i++) {\n        const interestPayment = multiply(balance, periodRate);\n        const principalPayment = subtract(payment, interestPayment);\n\n        balance = subtract(balance, principalPayment);\n\n        // Prevent negative balance on last payment\n        if (balance.lessThan(0)) {\n            balance = decimal(0);\n        }\n\n        const paymentDate = new Date(today);\n        const monthsElapsed = Math.floor((i * 12) / paymentsPerYear);\n        paymentDate.setMonth(paymentDate.getMonth() + monthsElapsed);\n\n        schedule.push({\n            paymentNumber: i,\n            paymentDate: paymentDate.toISOString().split('T')[0],\n            principalPayment: round(principalPayment, 2),\n            interestPayment: round(interestPayment, 2),\n            totalPayment: round(payment, 2),\n            remainingBalance: round(balance, 2),\n        });\n\n        if (balance.equals(0)) break;\n    }\n\n    return schedule;\n}\n\nexport default {\n    calculateMortgage,\n    generateAmortizationSchedule,\n};\n\n","/**\n * Prepayment Calculator Service\n * Calculates mortgage with extra payments\n */\n\nimport { decimal, add, subtract, multiply, divide, power, round } from '../utils/decimal-wrapper.js';\nimport { MORTGAGE_CONSTANTS } from '../utils/constants.js';\nimport { calculateMortgage } from './mortgageCalculator.js';\n\nexport function calculateWithPrepayment(params) {\n    const { principal, interestRate, amortizationMonths, paymentFrequency, extraPayment, extraPaymentFrequency } = params;\n\n    // Get base calculation\n    const baseCalc = calculateMortgage({ principal, interestRate, amortizationMonths, paymentFrequency });\n\n    // Setup for amortization with prepayment\n    const annualRate = divide(interestRate, 100);\n    const semiAnnualRate = divide(annualRate, 2);\n    const onePlusSemi = add(1, semiAnnualRate);\n    const effectiveAnnual = subtract(power(onePlusSemi, 2), 1);\n\n    const paymentsPerYear = MORTGAGE_CONSTANTS.PAYMENTS_PER_YEAR[paymentFrequency];\n    const onePlusAnnual = add(1, effectiveAnnual);\n    const periodRate = subtract(power(onePlusAnnual, divide(1, paymentsPerYear)), 1);\n\n    let balance = decimal(principal);\n    const regularPayment = decimal(baseCalc.regularPayment);\n    let paymentCount = 0;\n    let totalInterestPaid = decimal(0);\n    const maxPayments = 10000; // Safety limit\n\n    while (balance.greaterThan(0) && paymentCount < maxPayments) {\n        paymentCount++;\n\n        // Calculate interest for this period\n        const interestPayment = multiply(balance, periodRate);\n        totalInterestPaid = add(totalInterestPaid, interestPayment);\n\n        // Principal portion\n        let principalPayment = subtract(regularPayment, interestPayment);\n\n        // Add extra payment\n        let extra = decimal(0);\n        if (extraPaymentFrequency === 'per-payment') {\n            extra = decimal(extraPayment);\n        } else if (extraPaymentFrequency === 'annual' && paymentCount % paymentsPerYear === 0) {\n            extra = decimal(extraPayment);\n        } else if (extraPaymentFrequency === 'one-time' && paymentCount === 1) {\n            extra = decimal(extraPayment);\n        }\n\n        principalPayment = add(principalPayment, extra);\n\n        // Don't overpay\n        if (principalPayment.greaterThan(balance)) {\n            principalPayment = balance;\n        }\n\n        balance = subtract(balance, principalPayment);\n    }\n\n    const actualPayoffMonths = Math.ceil((paymentCount / paymentsPerYear) * 12);\n    const totalInterestSaved = subtract(baseCalc.totalInterest, totalInterestPaid);\n    const monthsSaved = amortizationMonths - actualPayoffMonths;\n\n    return {\n        actualPayoffMonths,\n        totalInterestSaved: round(totalInterestSaved, 2),\n        monthsSaved,\n        totalCostWithPrepayment: round(add(principal, totalInterestPaid), 2),\n        originalTotalCost: baseCalc.totalCost,\n        savingsPercentage: round(divide(totalInterestSaved, baseCalc.totalInterest).times(100), 2),\n    };\n}\n\n","/**\n * CAD currency formatting utilities\n */\n\nconst CAD_FORMATTER = new Intl.NumberFormat('en-CA', {\n    style: 'currency',\n    currency: 'CAD',\n    minimumFractionDigits: 2,\n    maximumFractionDigits: 2,\n});\n\nexport function formatCAD(value) {\n    if (value === null || value === undefined || isNaN(value)) {\n        return '$0.00';\n    }\n    return CAD_FORMATTER.format(value);\n}\n\nexport function parseCAD(value) {\n    if (!value) return 0;\n    const cleaned = value.toString().replace(/[^0-9.-]/g, '');\n    const parsed = parseFloat(cleaned);\n    return isNaN(parsed) ? 0 : parsed;\n}\n\nexport default { formatCAD, parseCAD };\n\n","/**\n * Input validation service\n */\n\nimport { MORTGAGE_CONSTANTS } from '../utils/constants.js';\nimport { formatCAD } from './currencyFormatter.js';\n\n// User-friendly error messages\nconst ERROR_MESSAGES = {\n    PRINCIPAL_TOO_LOW: `Loan amount must be at least ${formatCAD(MORTGAGE_CONSTANTS.MIN_PRINCIPAL)}`,\n    PRINCIPAL_TOO_HIGH: `Loan amount cannot exceed ${formatCAD(MORTGAGE_CONSTANTS.MAX_PRINCIPAL)}`,\n    RATE_TOO_LOW: `Interest rate must be at least ${MORTGAGE_CONSTANTS.MIN_INTEREST_RATE}%`,\n    RATE_TOO_HIGH: `Interest rate cannot exceed ${MORTGAGE_CONSTANTS.MAX_INTEREST_RATE}%`,\n    TERM_TOO_SHORT: 'Amortization period must be at least 1 year',\n    TERM_TOO_LONG_HIGH_RATIO: 'High-ratio mortgages (over 80% LTV) cannot exceed 25 years',\n    TERM_TOO_LONG_CONVENTIONAL: 'Conventional mortgages cannot exceed 30 years',\n    INVALID_PAYMENT_FREQUENCY: 'Please select a valid payment frequency',\n};\n\nexport function validateMortgageInputs(inputs) {\n    const errors = [];\n    const warnings = [];\n    const fieldErrors = {};\n\n    const { principal, interestRate, amortizationMonths, paymentFrequency, isHighRatio } = inputs;\n\n    // Validate principal\n    if (principal < MORTGAGE_CONSTANTS.MIN_PRINCIPAL) {\n        const error = 'PRINCIPAL_TOO_LOW';\n        errors.push(error);\n        fieldErrors.principal = ERROR_MESSAGES[error];\n    }\n    if (principal > MORTGAGE_CONSTANTS.MAX_PRINCIPAL) {\n        const error = 'PRINCIPAL_TOO_HIGH';\n        errors.push(error);\n        fieldErrors.principal = ERROR_MESSAGES[error];\n    }\n\n    // Validate interest rate\n    if (interestRate < MORTGAGE_CONSTANTS.MIN_INTEREST_RATE) {\n        const error = 'RATE_TOO_LOW';\n        errors.push(error);\n        fieldErrors.interestRate = ERROR_MESSAGES[error];\n    }\n    if (interestRate > MORTGAGE_CONSTANTS.MAX_INTEREST_RATE) {\n        const error = 'RATE_TOO_HIGH';\n        errors.push(error);\n        fieldErrors.interestRate = ERROR_MESSAGES[error];\n    }\n\n    // Validate amortization\n    if (amortizationMonths < MORTGAGE_CONSTANTS.MIN_AMORTIZATION) {\n        const error = 'TERM_TOO_SHORT';\n        errors.push(error);\n        fieldErrors.amortizationMonths = ERROR_MESSAGES[error];\n    }\n\n    if (isHighRatio && amortizationMonths > MORTGAGE_CONSTANTS.MAX_AMORTIZATION_HIGH_RATIO) {\n        const error = 'TERM_TOO_LONG_HIGH_RATIO';\n        errors.push(error);\n        fieldErrors.amortizationMonths = ERROR_MESSAGES[error];\n    } else if (amortizationMonths > MORTGAGE_CONSTANTS.MAX_AMORTIZATION_CONVENTIONAL) {\n        const error = 'TERM_TOO_LONG_CONVENTIONAL';\n        errors.push(error);\n        fieldErrors.amortizationMonths = ERROR_MESSAGES[error];\n    }\n\n    // Validate payment frequency\n    if (!MORTGAGE_CONSTANTS.PAYMENTS_PER_YEAR[paymentFrequency]) {\n        const error = 'INVALID_PAYMENT_FREQUENCY';\n        errors.push(error);\n        fieldErrors.paymentFrequency = ERROR_MESSAGES[error];\n    }\n\n    return {\n        isValid: errors.length === 0,\n        errors,\n        warnings,\n        fieldErrors,\n        errorMessages: errors.map(code => ERROR_MESSAGES[code] || code),\n    };\n}\n\n/**\n * Get user-friendly error message for an error code\n */\nexport function getErrorMessage(errorCode) {\n    return ERROR_MESSAGES[errorCode] || errorCode;\n}\n\nexport default { validateMortgageInputs };\n\n","/**\n * Safe mathematical expression evaluator\n * Supports +, -, *, /, () and numbers\n */\n\nexport function evaluateExpression(expr) {\n    // Remove whitespace\n    expr = expr.replace(/\\s/g, '');\n\n    // Validate expression contains only allowed characters\n    if (!/^[0-9+\\-*/().,]+$/.test(expr)) {\n        return null;\n    }\n\n    // Replace commas with empty string (for thousand separators)\n    expr = expr.replace(/,/g, '');\n\n    try {\n        // Create a safe evaluation context\n        // This is safe because we've validated the input contains only math operators\n        const result = Function('\"use strict\"; return (' + expr + ')')();\n\n        // Check if result is a valid number\n        if (typeof result === 'number' && !isNaN(result) && isFinite(result)) {\n            return Math.round(result * 100) / 100; // Round to 2 decimal places\n        }\n\n        return null;\n    } catch (e) {\n        return null;\n    }\n}\n\nexport function isExpression(str) {\n    // Check if string contains any math operators\n    return /[+\\-*/()]/.test(str);\n}\n","/**\n * URL Share Service\n * Handles encoding/decoding of mortgage scenarios for URL sharing\n */\n\n/**\n * Compress and encode scenarios data for URL\n * @param {Array} scenarios - Array of scenario objects\n * @returns {string} - Encoded string for URL parameter\n */\nexport function encodeScenarios(scenarios) {\n    if (!scenarios || scenarios.length === 0) {\n        return '';\n    }\n\n    try {\n        // Compact encoding to minimize URL length\n        // Format: principal|rate|months|freq|extra|extrafreq;...\n        const compactData = scenarios.map(s => {\n            const parts = [\n                s.principal, // principal (keep full accuracy)\n                Math.round(s.interestRate * 100), // rate as integer (4.05 -> 405)\n                s.amortizationMonths, // months\n                s.paymentFrequency.charAt(0), // w/b/m\n                s.extraPaymentAmount || 0, // extra payment\n            ];\n\n            // Only add extra frequency if not default\n            if (s.extraPaymentFrequency !== 'per-payment') {\n                parts.push(s.extraPaymentFrequency === 'annual' ? 'a' : 'o');\n            }\n\n            return parts.join('|');\n        }).join(';');\n\n        // Simple base64 encoding without JSON overhead\n        const encoded = btoa(compactData)\n            .replace(/\\+/g, '-')\n            .replace(/\\//g, '_')\n            .replace(/=+$/, '');\n\n        return encoded;\n    } catch (error) {\n        console.error('Error encoding scenarios:', error);\n        return '';\n    }\n}\n\n/**\n * Decode scenarios data from URL\n * @param {string} encoded - Encoded string from URL parameter\n * @returns {Array} - Array of scenario objects\n */\nexport function decodeScenarios(encoded) {\n    if (!encoded) {\n        return [];\n    }\n\n    try {\n        // Restore base64 padding and convert from URL-safe format\n        const base64 = encoded\n            .replace(/-/g, '+')\n            .replace(/_/g, '/')\n            + '=='.substring(0, (4 - encoded.length % 4) % 4);\n\n        // Decode the compact format\n        const compactData = atob(base64);\n        const scenarios = compactData.split(';');\n\n        // Reconstruct full scenario objects from compact data\n        return scenarios.map(scenarioStr => {\n            const parts = scenarioStr.split('|');\n            return {\n                principal: parseFloat(parts[0]), // direct value\n                interestRate: parseFloat(parts[1]) / 100, // convert back from integer\n                amortizationMonths: parseInt(parts[2]),\n                paymentFrequency: parts[3] === 'w' ? 'weekly' :\n                    parts[3] === 'b' ? 'bi-weekly' : 'monthly',\n                extraPaymentAmount: parseFloat(parts[4]) || 0,\n                extraPaymentFrequency: parts[5] === 'a' ? 'annual' :\n                    parts[5] === 'o' ? 'one-time' : 'per-payment'\n            };\n        });\n    } catch (error) {\n        console.error('Error decoding scenarios:', error);\n        return [];\n    }\n}\n\n/**\n * Generate a shareable URL with encoded scenarios\n * @param {Array} scenarios - Array of scenario objects\n * @returns {string} - Full shareable URL\n */\nexport function generateShareableUrl(scenarios) {\n    const encoded = encodeScenarios(scenarios);\n    if (!encoded) {\n        return window.location.href.split('?')[0];\n    }\n\n    // Use the current URL without query parameters as base\n    const baseUrl = window.location.href.split('?')[0];\n    return `${baseUrl}?s=${encoded}`;\n}\n\n/**\n * Parse scenarios from current URL\n * @returns {Array} - Array of scenario objects or empty array\n */\nexport function parseScenariosFromUrl() {\n    const urlParams = new URLSearchParams(window.location.search);\n    const encoded = urlParams.get('s');\n    return decodeScenarios(encoded);\n}\n\n/**\n * Clean the URL by removing the encoded data parameter\n */\nexport function cleanUrl() {\n    const url = new URL(window.location);\n    url.searchParams.delete('s');\n    window.history.replaceState({}, document.title, url.pathname);\n}\n\n/**\n * Copy text to clipboard with fallback\n * @param {string} text - Text to copy\n * @returns {Promise<boolean>} - Success status\n */\nexport async function copyToClipboard(text) {\n    try {\n        if (navigator.clipboard && window.isSecureContext) {\n            await navigator.clipboard.writeText(text);\n            return true;\n        } else {\n            // Fallback for older browsers\n            const textArea = document.createElement('textarea');\n            textArea.value = text;\n            textArea.style.position = 'fixed';\n            textArea.style.left = '-999999px';\n            document.body.appendChild(textArea);\n            textArea.select();\n            const success = document.execCommand('copy');\n            document.body.removeChild(textArea);\n            return success;\n        }\n    } catch (error) {\n        console.error('Failed to copy to clipboard:', error);\n        return false;\n    }\n}\n","/**\n * Modern Calculator Component\n * Single-page, real-time mortgage calculator with all features visible\n */\n\nimport { calculateMortgage } from '../services/mortgageCalculator.js';\nimport { calculateWithPrepayment } from '../services/prepaymentCalculator.js';\nimport { validateMortgageInputs } from '../services/validation.js';\nimport { formatCAD } from '../services/currencyFormatter.js';\nimport eventBus, { EVENTS } from '../utils/eventBus.js';\nimport logger from '../utils/logger.js';\nimport { MORTGAGE_CONSTANTS } from '../utils/constants.js';\nimport { evaluateExpression, isExpression } from '../utils/expressionEvaluator.js';\nimport {\n    generateShareableUrl,\n    parseScenariosFromUrl,\n    cleanUrl,\n    copyToClipboard\n} from '../services/urlShareService.js';\n\nexport class CalculatorModern {\n    constructor(containerId) {\n        this.container = document.getElementById(containerId);\n        if (!this.container) {\n            console.error(`Container with id '${containerId}' not found`);\n            return;\n        }\n\n        this.state = {\n            principal: 298000,\n            interestRate: 4.05,\n            amortizationMonths: 360,\n            paymentFrequency: 'weekly',\n            targetPayment: null,\n            extraPaymentAmount: 0,\n            extraPaymentFrequency: 'per-payment',\n        };\n\n        this.result = null;\n        this.prepaymentResult = null;\n        this.scenarios = [];\n        this.validationErrors = null;\n        this.isCalculating = false;\n\n        // Check for shared scenarios in URL\n        this.loadSharedScenarios();\n\n        this.render();\n        this.attachEventListeners();\n        this.calculateAll(); // Calculate on load\n    }\n\n    render() {\n        this.container.innerHTML = `\n      <div class=\"max-w-7xl mx-auto\">\n        <div class=\"grid grid-cols-1 lg:grid-cols-12 gap-4 lg:gap-6\">\n          \n          <!-- Main Calculator Panel -->\n          <div class=\"lg:col-span-5\">\n            <div class=\"bg-white dark:bg-gray-800 rounded-xl shadow-lg p-4 sm:p-6\">\n              <h2 class=\"text-2xl font-bold mb-6 text-gray-900 dark:text-white\">\n                Prepayment Calculator\n              </h2>\n              \n              <div class=\"space-y-4\">\n                <!-- Loan Amount -->\n                <div>\n                  <label for=\"principal\" class=\"text-sm font-medium text-gray-700 dark:text-gray-300 mb-1 block\">\n                    Loan Amount\n                  </label>\n                  <div class=\"relative\">\n                    <span class=\"absolute left-3 top-1/2 transform -translate-y-1/2 text-gray-500\" aria-hidden=\"true\">$</span>\n                    <input\n                      type=\"number\"\n                      id=\"principal\"\n                      name=\"principal\"\n                      value=\"${this.state.principal}\"\n                      min=\"1000\"\n                      max=\"${MORTGAGE_CONSTANTS.MAX_PRINCIPAL}\"\n                      step=\"1000\"\n                      aria-label=\"Loan amount in dollars\"\n                      aria-required=\"true\"\n                      class=\"w-full pl-8 pr-3 py-2 border border-gray-300 dark:border-gray-600 rounded-lg focus:ring-2 focus:ring-blue-500 dark:bg-gray-700 dark:text-white\"\n                    />\n                  </div>\n                </div>\n\n                <!-- Interest Rate & Amortization -->\n                <div class=\"grid grid-cols-1 sm:grid-cols-2 gap-4\">\n                  <div>\n                    <label for=\"interestRate\" class=\"text-sm font-medium text-gray-700 dark:text-gray-300 mb-1 block\">\n                      Interest Rate\n                    </label>\n                    <div class=\"relative\">\n                      <input\n                        type=\"number\"\n                        id=\"interestRate\"\n                        name=\"interestRate\"\n                        value=\"${this.state.interestRate}\"\n                        min=\"0.01\"\n                        max=\"30\"\n                        step=\"0.01\"\n                        aria-label=\"Annual interest rate percentage\"\n                        aria-required=\"true\"\n                        class=\"w-full pr-8 pl-3 py-2 border border-gray-300 dark:border-gray-600 rounded-lg focus:ring-2 focus:ring-blue-500 dark:bg-gray-700 dark:text-white\"\n                      />\n                      <span class=\"absolute right-3 top-1/2 transform -translate-y-1/2 text-gray-500 text-sm\" aria-hidden=\"true\">%</span>\n                    </div>\n                  </div>\n                  \n                  <div>\n                    <label for=\"amortizationYears\" class=\"text-sm font-medium text-gray-700 dark:text-gray-300 mb-1 block\">\n                      Amortization\n                    </label>\n                    <input\n                      type=\"number\"\n                      id=\"amortizationYears\"\n                      name=\"amortizationYears\"\n                      value=\"${this.state.amortizationMonths / 12}\"\n                      min=\"1\"\n                      max=\"30\"\n                      step=\"1\"\n                      placeholder=\"Years\"\n                      aria-label=\"Amortization period in years\"\n                      aria-required=\"true\"\n                      class=\"w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-lg focus:ring-2 focus:ring-blue-500 dark:bg-gray-700 dark:text-white\"\n                    />\n                  </div>\n                </div>\n\n                <!-- Payment Frequency -->\n                <div>\n                  <label for=\"paymentFrequency\" class=\"text-sm font-medium text-gray-700 dark:text-gray-300 mb-1 block\">\n                    Payment Frequency\n                  </label>\n                  <select \n                    id=\"paymentFrequency\"\n                    name=\"paymentFrequency\"\n                    aria-label=\"Payment frequency\"\n                    aria-required=\"true\"\n                    class=\"w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-lg focus:ring-2 focus:ring-blue-500 dark:bg-gray-700 dark:text-white\"\n                  >\n                    <option value=\"weekly\" ${this.state.paymentFrequency === 'weekly' ? 'selected' : ''}>Weekly (52/year)</option>\n                    <option value=\"bi-weekly\" ${this.state.paymentFrequency === 'bi-weekly' ? 'selected' : ''}>Bi-weekly (26/year)</option>\n                    <option value=\"monthly\" ${this.state.paymentFrequency === 'monthly' ? 'selected' : ''}>Monthly (12/year)</option>\n                  </select>\n                </div>\n\n                <!-- Divider -->\n                <div class=\"border-t border-gray-200 dark:border-gray-700 my-4\"></div>\n                \n                <h3 class=\"text-lg font-semibold text-gray-900 dark:text-white\">Prepayment Options</h3>\n\n                <!-- Extra Payment -->\n                <div>\n                  <label for=\"extraPayment\" class=\"text-sm font-medium text-gray-700 dark:text-gray-300 mb-1 block\">\n                    Extra Payment Amount\n                  </label>\n                  <div class=\"relative\">\n                    <span class=\"absolute left-3 top-1/2 transform -translate-y-1/2 text-gray-500\" aria-hidden=\"true\">$</span>\n                    <input\n                      type=\"text\"\n                      id=\"extraPayment\"\n                      name=\"extraPayment\"\n                      value=\"${this.state.extraPaymentAmount || ''}\"\n                      placeholder=\"e.g., 100 or (1200/12)+50\"\n                      aria-label=\"Extra payment amount or calculation expression\"\n                      aria-describedby=\"extraPaymentHelp\"\n                      class=\"w-full pl-8 pr-3 py-2 border border-gray-300 dark:border-gray-600 rounded-lg focus:ring-2 focus:ring-blue-500 dark:bg-gray-700 dark:text-white\"\n                    />\n                  </div>\n                  <p id=\"extraPaymentHelp\" class=\"text-xs text-gray-500 mt-1\">Enter amount or expression (e.g., 1200/12 or 50+25). Press Enter to calculate.</p>\n                  ${this.state.extraPaymentAmount < 0 ?\n                '<p class=\"text-xs text-red-600 dark:text-red-400 mt-1\">Amount must be positive</p>' :\n                this.state.extraPaymentAmount > this.result?.regularPayment * 2 ?\n                    '<p class=\"text-xs text-yellow-600 dark:text-yellow-400 mt-1\">Warning: Extra payment is very high</p>' :\n                    ''}\n                </div>\n\n                <!-- Extra Payment Type -->\n                <div>\n                  <label for=\"extraPaymentFrequency\" class=\"text-sm font-medium text-gray-700 dark:text-gray-300 mb-1 block\">\n                    Extra Payment Type\n                  </label>\n                  <select \n                    id=\"extraPaymentFrequency\"\n                    name=\"extraPaymentFrequency\"\n                    aria-label=\"Extra payment frequency\"\n                    class=\"w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-lg focus:ring-2 focus:ring-blue-500 dark:bg-gray-700 dark:text-white\"\n                  >\n                    <option value=\"per-payment\">Each Payment</option>\n                    <option value=\"annual\">Annual Lump Sum</option>\n                    <option value=\"one-time\">One-time Payment</option>\n                  </select>\n                </div>\n              </div>\n            </div>\n          </div>\n\n          <!-- Results Panel -->\n          <div class=\"lg:col-span-7\">\n            <div class=\"space-y-6\">\n              <!-- Base Mortgage -->\n              <div class=\"bg-white dark:bg-gray-800 rounded-xl shadow-lg p-4 sm:p-6\">\n                <h3 class=\"text-base sm:text-lg font-semibold mb-3 sm:mb-4 text-gray-900 dark:text-white\">Base Mortgage</h3>\n                <div id=\"base-mortgage-results\">\n                  ${this.renderMainResults()}\n                </div>\n              </div>\n\n              <!-- Prepayment Impact Section -->\n              <div id=\"prepayment-section\">\n                ${this.prepaymentResult && this.state.extraPaymentAmount > 0 ? `\n                  <div class=\"bg-green-50 dark:bg-green-900/20 rounded-xl shadow-lg p-4 sm:p-6\">\n                    <h3 class=\"text-base sm:text-lg font-semibold mb-3 sm:mb-4 text-green-900 dark:text-green-100\">\n                      Prepayment Impact\n                    </h3>\n                    ${this.renderPrepaymentImpact()}\n                  </div>\n                ` : ''}\n              </div>\n\n              <!-- Comparison Table -->\n              <div class=\"bg-white dark:bg-gray-800 rounded-xl shadow-lg p-4 sm:p-6 overflow-hidden\">\n                <div class=\"flex justify-between items-center mb-3 sm:mb-4\">\n                  <h3 class=\"text-base sm:text-lg font-semibold text-gray-900 dark:text-white\">\n                    Scenario Comparison\n                  </h3>\n                  <div class=\"flex gap-2\">\n                    ${this.scenarios.length > 0 ? `\n                      <button id=\"share-scenarios\" class=\"btn btn-secondary btn-sm text-xs sm:text-sm\" title=\"Share scenarios\" aria-label=\"Share scenarios via link\">\n                        <svg class=\"w-4 h-4 inline-block mr-1\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" aria-hidden=\"true\">\n                          <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M17 16l4-4m0 0l-4-4m4 4H7m6 4v1a3 3 0 01-3 3H6a3 3 0 01-3-3V7a3 3 0 013-3h4a3 3 0 013 3v1\" />\n                        </svg>\n                        Share\n                      </button>\n                    ` : ''}\n                    <button id=\"add-to-comparison\" class=\"btn btn-primary btn-sm text-xs sm:text-sm\" aria-label=\"Add current scenario to comparison\">\n                      + Add Current\n                    </button>\n                  </div>\n                </div>\n                <div id=\"inline-comparison-table\" class=\"overflow-x-auto -mx-4 sm:mx-0\">\n                  <div class=\"px-4 sm:px-0 min-w-full\">\n                    ${this.renderComparisonTable()}\n                  </div>\n                </div>\n              </div>\n\n              <!-- Actions -->\n              <div class=\"flex flex-col sm:flex-row gap-2 sm:gap-3\">\n                <button id=\"view-schedule\" class=\"btn btn-secondary flex-1 text-sm sm:text-base\" aria-label=\"View detailed amortization schedule\">\n                  View Amortization Schedule\n                </button>\n                <button id=\"reset\" class=\"btn btn-secondary text-sm sm:text-base\" aria-label=\"Reset calculator to default values\">\n                  Reset Calculator\n                </button>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    `;\n    }\n\n    renderMainResults() {\n        if (!this.result) {\n            if (this.validationErrors && this.validationErrors.isValid === false) {\n                return `\n        <div class=\"text-center py-8\">\n          <div class=\"text-red-600 dark:text-red-400 mb-2\" role=\"alert\" aria-live=\"polite\">\n            <svg class=\"w-8 h-8 mx-auto mb-2\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" aria-hidden=\"true\">\n              <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M12 8v4m0 4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z\" />\n            </svg>\n            <p class=\"font-medium\">Please fix the errors above to see results</p>\n          </div>\n        </div>\n      `;\n            }\n            return `\n        <div class=\"text-center py-8 text-gray-500\">\n          <p>Enter your mortgage details to see payment information</p>\n        </div>\n      `;\n        }\n\n        // Monthly equivalent removed - not currently used in display\n\n        return `\n      <div class=\"grid grid-cols-1 sm:grid-cols-3 gap-3\">\n        <div class=\"bg-gray-50 dark:bg-gray-700 rounded-lg p-3 sm:p-4\">\n          <div class=\"text-xs sm:text-sm text-gray-600 dark:text-gray-400 capitalize\">${this.state.paymentFrequency} Payment</div>\n          <div class=\"text-lg sm:text-xl lg:text-2xl font-bold text-gray-900 dark:text-white\">\n            ${formatCAD(this.result.regularPayment)}\n          </div>\n          <div class=\"text-xs text-gray-500\">${MORTGAGE_CONSTANTS.PAYMENTS_PER_YEAR[this.state.paymentFrequency]} payments/year</div>\n        </div>\n        \n        <div class=\"bg-gray-50 dark:bg-gray-700 rounded-lg p-3 sm:p-4\">\n          <div class=\"text-xs sm:text-sm text-gray-600 dark:text-gray-400\">Total Interest</div>\n          <div class=\"text-lg sm:text-xl lg:text-2xl font-bold text-gray-900 dark:text-white\">\n            ${formatCAD(this.result.totalInterest)}\n          </div>\n          <div class=\"text-xs text-gray-500\">${(this.result.totalInterest / this.state.principal * 100).toFixed(1)}% of principal</div>\n        </div>\n        \n        <div class=\"bg-gray-50 dark:bg-gray-700 rounded-lg p-3 sm:p-4\">\n          <div class=\"text-xs sm:text-sm text-gray-600 dark:text-gray-400\">Total Cost</div>\n          <div class=\"text-lg sm:text-xl lg:text-2xl font-bold text-gray-900 dark:text-white\">\n            ${formatCAD(this.result.totalCost)}\n          </div>\n          <div class=\"text-xs text-gray-500\">${this.state.amortizationMonths / 12} year term</div>\n        </div>\n      </div>\n    `;\n    }\n\n    renderTargetPaymentAnalysis() {\n        const targetPayment = parseFloat(this.state.targetPayment);\n        if (!targetPayment || !this.result) return '';\n\n        const difference = targetPayment - this.result.regularPayment;\n        const percentDiff = (difference / this.result.regularPayment * 100).toFixed(1);\n\n        if (Math.abs(difference) < 1) {\n            return `\n        <div class=\"mt-4 p-3 bg-green-50 dark:bg-green-900/20 rounded-lg\">\n          <p class=\"text-sm text-green-800 dark:text-green-200\">\n            ✓ Your target payment matches the calculated payment!\n          </p>\n        </div>\n      `;\n        }\n\n        const canAfford = difference >= 0;\n\n        return `\n      <div class=\"mt-4 p-3 ${canAfford ? 'bg-green-50 dark:bg-green-900/20' : 'bg-red-50 dark:bg-red-900/20'} rounded-lg\">\n        <p class=\"text-sm ${canAfford ? 'text-green-800 dark:text-green-200' : 'text-red-800 dark:text-red-200'}\">\n          ${canAfford\n                ? `✓ You can afford this mortgage! Your target is ${formatCAD(Math.abs(difference))} (${Math.abs(percentDiff)}%) higher.`\n                : `✗ Target payment is ${formatCAD(Math.abs(difference))} (${Math.abs(percentDiff)}%) below required.`\n            }\n        </p>\n        ${canAfford && difference > 10 ? `\n          <p class=\"text-xs mt-1 ${canAfford ? 'text-green-700 dark:text-green-300' : 'text-red-700 dark:text-red-300'}\">\n            Consider adding ${formatCAD(difference)} as extra payment to pay off faster!\n          </p>\n        ` : ''}\n      </div>\n    `;\n    }\n\n    renderPrepaymentImpact() {\n        if (!this.result) {\n            return `\n          <div class=\"text-center py-8 text-gray-500\">\n            <p>Calculate your mortgage to see prepayment options</p>\n          </div>\n        `;\n        }\n\n        if (!this.prepaymentResult || this.state.extraPaymentAmount <= 0) {\n            return `\n          <div class=\"text-center py-8\">\n            <p class=\"text-gray-600 dark:text-gray-400 mb-4\">\n              Add extra payments to see how much you can save\n            </p>\n            <div class=\"grid grid-cols-1 md:grid-cols-3 gap-4 max-w-2xl mx-auto text-sm\">\n              <div class=\"bg-white dark:bg-gray-700 rounded-lg p-3\">\n                <div class=\"font-semibold text-gray-700 dark:text-gray-300\">Weekly +$50</div>\n                <div class=\"text-gray-500 dark:text-gray-400\">Save ~22% interest</div>\n              </div>\n              <div class=\"bg-white dark:bg-gray-700 rounded-lg p-3\">\n                <div class=\"font-semibold text-gray-700 dark:text-gray-300\">Weekly +$100</div>\n                <div class=\"text-gray-500 dark:text-gray-400\">Save ~36% interest</div>\n              </div>\n              <div class=\"bg-white dark:bg-gray-700 rounded-lg p-3\">\n                <div class=\"font-semibold text-gray-700 dark:text-gray-300\">Annual $5,000</div>\n                <div class=\"text-gray-500 dark:text-gray-400\">Save ~30% interest</div>\n              </div>\n            </div>\n          </div>\n        `;\n        }\n\n        const savings = this.prepaymentResult;\n        const yearsSaved = Math.floor(savings.monthsSaved / 12);\n        const monthsSaved = savings.monthsSaved % 12;\n\n        // Calculate new total payment\n        const totalPaymentWithExtra = this.state.extraPaymentFrequency === 'per-payment'\n            ? this.result.regularPayment + this.state.extraPaymentAmount\n            : this.result.regularPayment;\n\n        // Calculate exact payoff time\n        const newPayoffYears = Math.floor(savings.actualPayoffMonths / 12);\n        const newPayoffMonths = savings.actualPayoffMonths % 12;\n        const originalYears = Math.floor(this.state.amortizationMonths / 12);\n        const originalMonths = this.state.amortizationMonths % 12;\n\n        return `\n        <div class=\"grid grid-cols-2 sm:grid-cols-4 gap-2 sm:gap-3\">\n          <div class=\"bg-green-100 dark:bg-green-900/40 rounded-lg p-2 sm:p-3\">\n            <div class=\"text-xs text-green-700 dark:text-green-300\">New Payment</div>\n            <div class=\"text-sm sm:text-base lg:text-lg font-bold text-green-900 dark:text-green-100\">\n              ${formatCAD(totalPaymentWithExtra)}\n            </div>\n            <div class=\"text-xs text-green-600 dark:text-green-400\">\n              ${this.state.paymentFrequency === 'weekly' ? 'Weekly' :\n                this.state.paymentFrequency === 'bi-weekly' ? 'Bi-weekly' : 'Monthly'}\n            </div>\n          </div>\n          \n          <div class=\"bg-green-100 dark:bg-green-900/40 rounded-lg p-2 sm:p-3\">\n            <div class=\"text-xs text-green-700 dark:text-green-300\">Interest Saved</div>\n            <div class=\"text-sm sm:text-base lg:text-lg font-bold text-green-900 dark:text-green-100\">\n              ${formatCAD(savings.totalInterestSaved)}\n            </div>\n            <div class=\"text-xs text-green-600 dark:text-green-400\">${savings.savingsPercentage}% saved</div>\n          </div>\n          \n          <div class=\"bg-green-100 dark:bg-green-900/40 rounded-lg p-2 sm:p-3\">\n            <div class=\"text-xs text-green-700 dark:text-green-300\">Time Saved</div>\n            <div class=\"text-sm sm:text-base lg:text-lg font-bold text-green-900 dark:text-green-100\">\n              ${yearsSaved}y ${monthsSaved}m\n            </div>\n            <div class=\"text-xs text-green-600 dark:text-green-400\">\n              ${Math.round(savings.monthsSaved / this.state.amortizationMonths * 100)}% faster\n            </div>\n          </div>\n          \n          <div class=\"bg-green-100 dark:bg-green-900/40 rounded-lg p-2 sm:p-3\">\n            <div class=\"text-xs text-green-700 dark:text-green-300\">Payoff Time</div>\n            <div class=\"text-sm sm:text-base lg:text-lg font-bold text-green-900 dark:text-green-100\">\n              ${newPayoffYears}y ${newPayoffMonths}m\n            </div>\n            <div class=\"text-xs text-green-600 dark:text-green-400\">\n              vs ${originalYears}y ${originalMonths}m\n            </div>\n          </div>\n        </div>\n        \n        <div class=\"mt-4 p-3 bg-green-200/50 dark:bg-green-900/50 rounded-lg\">\n          <p class=\"text-sm text-green-800 dark:text-green-200 text-center\">\n            💡 Adding ${formatCAD(this.state.extraPaymentAmount)} ${this.state.extraPaymentFrequency === 'per-payment' ? 'to each payment' : this.state.extraPaymentFrequency === 'annual' ? 'annually' : 'once'} \n            saves ${formatCAD(savings.totalInterestSaved)} and ${yearsSaved} years ${monthsSaved} months!\n          </p>\n        </div>\n    `;\n    }\n\n    renderComparisonTable() {\n        if (this.scenarios.length === 0) {\n            return `\n                <div class=\"text-center py-8 text-gray-500\">\n                    <p class=\"mb-2\">No scenarios added yet.</p>\n                    <p class=\"text-sm\">Click \"+ Add Current\" to compare different prepayment strategies.</p>\n                </div>\n            `;\n        }\n\n        return `\n            <div class=\"overflow-x-auto max-h-96 overflow-y-auto\" role=\"region\" aria-label=\"Scenario comparison table\" aria-live=\"polite\">\n                <table class=\"w-full text-sm min-w-[600px]\" role=\"table\" aria-label=\"Mortgage scenario comparison\">\n                    <thead class=\"sticky top-0 bg-white dark:bg-gray-800 z-10\">\n                        <tr class=\"border-b border-gray-200 dark:border-gray-700\">\n                            <th scope=\"col\" class=\"text-left py-2 px-2 sm:px-3 text-xs font-medium text-gray-600 dark:text-gray-400\">Scenario</th>\n                            <th scope=\"col\" class=\"text-right py-2 px-2 sm:px-3 text-xs font-medium text-gray-600 dark:text-gray-400\">Payment</th>\n                            <th scope=\"col\" class=\"text-right py-2 px-2 sm:px-3 text-xs font-medium text-gray-600 dark:text-gray-400 hidden sm:table-cell\">Interest</th>\n                            <th scope=\"col\" class=\"text-right py-2 px-2 sm:px-3 text-xs font-medium text-gray-600 dark:text-gray-400\">Total Cost</th>\n                            <th scope=\"col\" class=\"text-right py-2 px-2 sm:px-3 text-xs font-medium text-gray-600 dark:text-gray-400\">Time</th>\n                            <th scope=\"col\" class=\"text-right py-2 px-2 sm:px-3 text-xs font-medium text-gray-600 dark:text-gray-400\">Savings</th>\n                            <th scope=\"col\" class=\"text-center py-2 px-2 sm:px-3\"><span class=\"sr-only\">Actions</span></th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        ${this.scenarios.map((scenario, index) => `\n                            <tr class=\"border-b border-gray-100 dark:border-gray-800 hover:bg-gray-50 dark:hover:bg-gray-700/50\">\n                                <td class=\"py-2 px-2 sm:px-3\">\n                                    <div class=\"font-medium text-gray-900 dark:text-white text-xs sm:text-sm\">\n                                        ${scenario.name}\n                                    </div>\n                                    <div class=\"text-xs text-gray-500\">\n                                        ${formatCAD(scenario.principal)} @ ${scenario.interestRate}%\n                                        ${scenario.extraPaymentAmount > 0\n                ? ` • +${formatCAD(scenario.extraPaymentAmount)}`\n                : ''}\n                                    </div>\n                                </td>\n                                <td class=\"text-right py-2 px-2 sm:px-3 text-gray-900 dark:text-white whitespace-nowrap\">\n                                    <div class=\"text-xs sm:text-sm\">${formatCAD(scenario.totalPayment)}</div>\n                                    <div class=\"text-xs text-gray-500\">\n                                        ${scenario.paymentFrequency === 'weekly' ? 'W' :\n                scenario.paymentFrequency === 'bi-weekly' ? 'B' : 'M'}\n                                    </div>\n                                </td>\n                                <td class=\"text-right py-2 px-2 sm:px-3 text-gray-900 dark:text-white whitespace-nowrap hidden sm:table-cell\">\n                                    <span class=\"text-xs sm:text-sm\">${formatCAD(scenario.totalInterest)}</span>\n                                </td>\n                                <td class=\"text-right py-2 px-2 sm:px-3 font-medium text-gray-900 dark:text-white whitespace-nowrap\">\n                                    <span class=\"text-xs sm:text-sm\">${formatCAD(scenario.totalCost)}</span>\n                                </td>\n                                <td class=\"text-right py-2 px-2 sm:px-3 text-gray-900 dark:text-white whitespace-nowrap\">\n                                    <span class=\"text-xs sm:text-sm\">\n                                        ${Math.floor(scenario.payoffMonths / 12)}y ${scenario.payoffMonths % 12}m\n                                    </span>\n                                </td>\n                                <td class=\"text-right py-2 px-2 sm:px-3\">\n                                    ${(() => {\n                if (scenario.savings > 0) {\n                    const baseScenario = this.scenarios[0];\n                    const basePayoffMonths = baseScenario ? baseScenario.payoffMonths : scenario.amortizationMonths;\n                    const monthsSaved = basePayoffMonths - scenario.payoffMonths;\n                    const yearsSaved = Math.floor(monthsSaved / 12);\n                    const remainingMonths = monthsSaved % 12;\n\n                    return `\n                                                <div>\n                                                    <div class=\"text-green-600 dark:text-green-400 font-medium text-xs sm:text-sm\">\n                                                        ${formatCAD(scenario.savings)}\n                                                    </div>\n                                                    ${monthsSaved > 0 ? `\n                                                        <div class=\"text-xs text-gray-500 dark:text-gray-400\">\n                                                            ${yearsSaved}y ${remainingMonths}m saved\n                                                        </div>\n                                                    ` : ''}\n                                                </div>\n                                            `;\n                }\n                return '<span class=\"text-gray-500 text-xs sm:text-sm\">-</span>';\n            })()}\n                                </td>\n                                <td class=\"text-center py-2 px-2 sm:px-3\">\n                                    <button class=\"text-red-600 hover:text-red-700 dark:text-red-400 dark:hover:text-red-300 text-lg focus:outline-none focus:ring-2 focus:ring-red-500 rounded\"\n                                            onclick=\"window.removeScenario(${index})\"\n                                            aria-label=\"Remove scenario ${scenario.name}\">\n                                        <span aria-hidden=\"true\">✕</span>\n                                    </button>\n                                </td>\n                            </tr>\n                        `).join('')}\n                    </tbody>\n                </table>\n            </div>\n        `;\n    }\n\n    attachEventListeners() {\n        // Real-time calculation on all inputs\n        const inputs = ['principal', 'interestRate', 'amortizationYears', 'paymentFrequency',\n            'extraPayment', 'extraPaymentFrequency'];\n\n        inputs.forEach(id => {\n            const element = document.getElementById(id);\n            if (element) {\n                element.addEventListener('input', (e) => {\n                    this.handleInputChange(e);\n                    this.calculateAll();\n                });\n\n                if (element.tagName === 'SELECT') {\n                    element.addEventListener('change', (e) => {\n                        this.handleInputChange(e);\n                        this.calculateAll();\n                    });\n                }\n\n                // Special handling for extraPayment field\n                if (id === 'extraPayment') {\n                    element.addEventListener('keydown', (e) => {\n                        if (e.key === 'Enter') {\n                            e.preventDefault();\n                            this.evaluateExtraPayment();\n                        }\n                    });\n\n                    element.addEventListener('blur', () => {\n                        this.evaluateExtraPayment();\n                    });\n                }\n            }\n        });\n\n\n        // Action buttons\n        const resetBtn = document.getElementById('reset');\n        if (resetBtn) {\n            resetBtn.addEventListener('click', () => this.handleReset());\n        }\n\n        const addToComparisonBtn = document.getElementById('add-to-comparison');\n        if (addToComparisonBtn) {\n            addToComparisonBtn.addEventListener('click', () => this.addToComparison());\n        }\n\n        // Set up remove scenario function\n        window.removeScenario = (index) => {\n            this.scenarios.splice(index, 1);\n            // Update the entire comparison section to show/hide share button\n            this.updateComparisonSection();\n            // Re-attach share button listener after DOM update\n            this.attachShareButtonListener();\n        };\n\n        // Share scenarios button\n        this.attachShareButtonListener();\n\n        const viewScheduleBtn = document.getElementById('view-schedule');\n        if (viewScheduleBtn) {\n            viewScheduleBtn.addEventListener('click', () => {\n                if (this.result) {\n                    eventBus.emit('schedule:show', this.state);\n                }\n            });\n        }\n    }\n\n    handleInputChange(e) {\n        const { id, value } = e.target;\n\n        switch (id) {\n            case 'principal':\n                this.state.principal = parseFloat(value) || 0;\n                break;\n            case 'interestRate':\n                this.state.interestRate = parseFloat(value) || 0;\n                break;\n            case 'amortizationYears':\n                this.state.amortizationMonths = (parseInt(value) || 0) * 12;\n                break;\n            case 'paymentFrequency':\n                this.state.paymentFrequency = value;\n                break;\n            case 'targetPayment':\n                this.state.targetPayment = value ? parseFloat(value) : null;\n                break;\n            case 'extraPayment':\n                // For extra payment, we'll evaluate on Enter/blur, not on every keystroke\n                // Just store the raw value for now\n                break;\n            case 'extraPaymentFrequency':\n                this.state.extraPaymentFrequency = value;\n                break;\n        }\n    }\n\n    calculateAll() {\n        // Debounce calculations\n        clearTimeout(this.calculationTimeout);\n        this.calculationTimeout = setTimeout(() => {\n            this.performCalculations();\n        }, 300);\n    }\n\n    performCalculations() {\n        this.isCalculating = true;\n\n        // Validate inputs\n        const validation = validateMortgageInputs(this.state);\n        if (!validation.isValid) {\n            this.result = null;\n            this.prepaymentResult = null;\n            this.validationErrors = validation;\n            this.isCalculating = false;\n\n            // Show user-friendly error messages\n            if (validation.errorMessages && validation.errorMessages.length > 0) {\n                // Show first error message as notification\n                eventBus.emit(EVENTS.NOTIFICATION, {\n                    message: validation.errorMessages[0],\n                    type: 'error'\n                });\n            }\n\n            this.updateResults();\n            this.updateValidationErrors(validation.fieldErrors);\n            return;\n        }\n\n        // Clear validation errors\n        this.validationErrors = null;\n        this.clearValidationErrors();\n\n        try {\n            // Main calculation\n            this.result = calculateMortgage(this.state);\n\n            // Prepayment calculation\n            if (this.state.extraPaymentAmount > 0) {\n                this.prepaymentResult = calculateWithPrepayment({\n                    ...this.state,\n                    extraPayment: this.state.extraPaymentAmount,\n                    extraPaymentFrequency: this.state.extraPaymentFrequency,\n                });\n            } else {\n                this.prepaymentResult = null;\n            }\n\n            // Update only the results sections\n            this.updateResults();\n\n            // Emit events\n            eventBus.emit(EVENTS.CALCULATION_COMPLETE, {\n                inputs: this.state,\n                result: this.result,\n                prepaymentResult: this.prepaymentResult,\n            });\n\n            this.isCalculating = false;\n        } catch (error) {\n            logger.error('Calculation failed', error);\n            this.result = null;\n            this.prepaymentResult = null;\n            this.isCalculating = false;\n            this.updateResults();\n\n            // Show user-friendly error\n            eventBus.emit(EVENTS.NOTIFICATION, {\n                message: 'An error occurred during calculation. Please check your inputs and try again.',\n                type: 'error'\n            });\n        }\n    }\n\n    updateValidationErrors(fieldErrors) {\n        // Update input fields with error states\n        if (fieldErrors) {\n            Object.keys(fieldErrors).forEach(fieldId => {\n                const field = document.getElementById(fieldId);\n                const errorMessage = fieldErrors[fieldId];\n\n                if (field) {\n                    // Add error styling\n                    field.classList.add('border-red-500', 'dark:border-red-600');\n                    field.classList.remove('border-gray-300', 'dark:border-gray-600');\n\n                    // Add or update error message\n                    let errorDiv = field.parentElement.querySelector('.field-error');\n                    if (!errorDiv) {\n                        errorDiv = document.createElement('div');\n                        errorDiv.className = 'field-error text-xs text-red-600 dark:text-red-400 mt-1';\n                        errorDiv.setAttribute('role', 'alert');\n                        errorDiv.setAttribute('aria-live', 'polite');\n                        field.parentElement.appendChild(errorDiv);\n                    }\n                    errorDiv.textContent = errorMessage;\n                    errorDiv.setAttribute('aria-label', `Error: ${errorMessage}`);\n                }\n            });\n        }\n    }\n\n    clearValidationErrors() {\n        // Clear all error states\n        const fields = ['principal', 'interestRate', 'amortizationYears', 'paymentFrequency', 'extraPayment'];\n        fields.forEach(fieldId => {\n            const field = document.getElementById(fieldId);\n            if (field) {\n                field.classList.remove('border-red-500', 'dark:border-red-600');\n                field.classList.add('border-gray-300', 'dark:border-gray-600');\n\n                const errorDiv = field.parentElement.querySelector('.field-error');\n                if (errorDiv) {\n                    errorDiv.remove();\n                }\n            }\n        });\n    }\n\n    updateResults() {\n        // Update base mortgage results\n        const baseResultsDiv = document.querySelector('#base-mortgage-results');\n        if (baseResultsDiv) {\n            baseResultsDiv.innerHTML = this.renderMainResults();\n        }\n\n        // Update prepayment section\n        const prepaymentSection = document.querySelector('#prepayment-section');\n        if (prepaymentSection) {\n            if (this.prepaymentResult && this.state.extraPaymentAmount > 0) {\n                prepaymentSection.innerHTML = `\n          <div class=\"bg-green-50 dark:bg-green-900/20 rounded-xl shadow-lg p-4 sm:p-6\">\n            <h3 class=\"text-base sm:text-lg font-semibold mb-3 sm:mb-4 text-green-900 dark:text-green-100\">\n              Prepayment Impact\n            </h3>\n            ${this.renderPrepaymentImpact()}\n          </div>\n        `;\n            } else {\n                prepaymentSection.innerHTML = '';\n            }\n        }\n\n        // Update comparison table\n        const comparisonDiv = document.querySelector('#inline-comparison-table');\n        if (comparisonDiv) {\n            comparisonDiv.innerHTML = this.renderComparisonTable();\n        }\n    }\n\n    updateComparisonSection() {\n        // Find the comparison section container by looking for the parent of inline-comparison-table\n        const comparisonTable = document.querySelector('#inline-comparison-table');\n        if (!comparisonTable) {\n            return;\n        }\n\n        // Get the card container (should be 2 levels up)\n        const comparisonContainer = comparisonTable.closest('.bg-white.dark\\\\:bg-gray-800.rounded-xl.shadow-lg');\n        if (comparisonContainer) {\n            comparisonContainer.innerHTML = `\n                <div class=\"flex justify-between items-center mb-3 sm:mb-4\">\n                  <h3 class=\"text-base sm:text-lg font-semibold text-gray-900 dark:text-white\">\n                    Scenario Comparison\n                  </h3>\n                  <div class=\"flex gap-2\">\n                    ${this.scenarios.length > 0 ? `\n                      <button id=\"share-scenarios\" class=\"btn btn-secondary btn-sm text-xs sm:text-sm\" title=\"Share scenarios\" aria-label=\"Share scenarios via link\">\n                        <svg class=\"w-4 h-4 inline-block mr-1\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" aria-hidden=\"true\">\n                          <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M17 16l4-4m0 0l-4-4m4 4H7m6 4v1a3 3 0 01-3 3H6a3 3 0 01-3-3V7a3 3 0 013-3h4a3 3 0 013 3v1\" />\n                        </svg>\n                        Share\n                      </button>\n                    ` : ''}\n                    <button id=\"add-to-comparison\" class=\"btn btn-primary btn-sm text-xs sm:text-sm\" aria-label=\"Add current scenario to comparison\">\n                      + Add Current\n                    </button>\n                  </div>\n                </div>\n                <div id=\"inline-comparison-table\" class=\"overflow-x-auto -mx-4 sm:mx-0\">\n                  <div class=\"px-4 sm:px-0 min-w-full\">\n                    ${this.renderComparisonTable()}\n                  </div>\n                </div>\n            `;\n\n            // Re-attach add to comparison listener\n            const addBtn = document.getElementById('add-to-comparison');\n            if (addBtn) {\n                addBtn.addEventListener('click', () => this.addToComparison());\n            }\n        }\n    }\n\n    handleReset() {\n        this.state = {\n            principal: 298000,\n            interestRate: 4.05,\n            amortizationMonths: 360,\n            paymentFrequency: 'weekly',\n            targetPayment: null,\n            extraPaymentAmount: 0,\n            extraPaymentFrequency: 'per-payment',\n        };\n        this.result = null;\n        this.prepaymentResult = null;\n        this.render();\n        this.attachEventListeners();\n        this.calculateAll();\n    }\n\n    evaluateExtraPayment() {\n        const input = document.getElementById('extraPayment');\n        if (!input) return;\n\n        const value = input.value.trim();\n\n        if (!value) {\n            this.state.extraPaymentAmount = 0;\n            this.calculateAll();\n            return;\n        }\n\n        // Check if it's an expression\n        if (isExpression(value)) {\n            const result = evaluateExpression(value);\n            if (result !== null) {\n                if (result < 0) {\n                    // Valid expression but negative result\n                    eventBus.emit(EVENTS.NOTIFICATION, {\n                        message: `${value} = ${result} (must be positive)`,\n                        type: 'error'\n                    });\n                    this.state.extraPaymentAmount = 0;\n                    input.value = 0;\n                } else {\n                    // Valid positive result\n                    this.state.extraPaymentAmount = result;\n                    input.value = result;\n                    this.calculateAll();\n\n                    // Show brief notification\n                    eventBus.emit(EVENTS.NOTIFICATION, {\n                        message: `Calculated: ${value} = ${result}`,\n                        type: 'info'\n                    });\n                }\n            } else {\n                // Invalid expression\n                eventBus.emit(EVENTS.NOTIFICATION, {\n                    message: 'Invalid expression. Use numbers and +, -, *, /, ()',\n                    type: 'error'\n                });\n            }\n        } else {\n            // Plain number\n            const num = parseFloat(value);\n            if (!isNaN(num) && num >= 0) {\n                this.state.extraPaymentAmount = num;\n                this.calculateAll();\n            } else if (num < 0) {\n                this.state.extraPaymentAmount = 0;\n                input.value = 0;\n                eventBus.emit(EVENTS.NOTIFICATION, {\n                    message: 'Extra payment must be positive',\n                    type: 'error'\n                });\n            }\n        }\n    }\n\n    addToComparison() {\n        if (!this.result) return;\n\n        const baseScenario = this.scenarios.find(s => s.extraPaymentAmount === 0);\n        // baseTotalCost removed - not currently used\n\n        // Calculate total payment including extra\n        let totalPayment = this.result.regularPayment;\n        if (this.state.extraPaymentAmount > 0 && this.state.extraPaymentFrequency === 'per-payment') {\n            totalPayment += this.state.extraPaymentAmount;\n        }\n\n        // Create a descriptive name based on what's different from base\n        let scenarioName = '';\n        if (this.scenarios.length === 0) {\n            scenarioName = 'Base Scenario';\n        } else {\n            const baseScenario = this.scenarios[0];\n            const differences = [];\n\n            if (this.state.principal !== baseScenario.principal) {\n                differences.push(`${formatCAD(this.state.principal)}`);\n            }\n            if (this.state.interestRate !== baseScenario.interestRate) {\n                differences.push(`${this.state.interestRate}%`);\n            }\n            if (this.state.amortizationMonths !== baseScenario.amortizationMonths) {\n                differences.push(`${this.state.amortizationMonths / 12}yr`);\n            }\n            if (this.state.paymentFrequency !== baseScenario.paymentFrequency) {\n                differences.push(this.state.paymentFrequency);\n            }\n            if (this.state.extraPaymentAmount > 0) {\n                differences.push(`+${formatCAD(this.state.extraPaymentAmount)}`);\n            }\n\n            scenarioName = differences.length > 0 ? differences.join(', ') : 'Scenario ' + (this.scenarios.length + 1);\n        }\n\n        const scenario = {\n            name: scenarioName,\n            basePayment: this.result.regularPayment,\n            totalPayment: totalPayment,\n            extraPaymentAmount: this.state.extraPaymentAmount,\n            extraPaymentFrequency: this.state.extraPaymentFrequency,\n            totalInterest: this.prepaymentResult && this.state.extraPaymentAmount > 0\n                ? this.result.totalInterest - this.prepaymentResult.totalInterestSaved\n                : this.result.totalInterest,\n            totalCost: this.prepaymentResult && this.state.extraPaymentAmount > 0\n                ? this.prepaymentResult.totalCostWithPrepayment\n                : this.result.totalCost,\n            payoffMonths: this.prepaymentResult && this.state.extraPaymentAmount > 0 && this.prepaymentResult.actualPayoffMonths\n                ? this.prepaymentResult.actualPayoffMonths\n                : this.state.amortizationMonths,\n            savings: 0, // Will be calculated after adding to scenarios\n            principal: this.state.principal,\n            interestRate: this.state.interestRate,\n            amortizationMonths: this.state.amortizationMonths,\n            paymentFrequency: this.state.paymentFrequency\n        };\n\n        // Don't add duplicate scenarios - check all relevant parameters\n        const exists = this.scenarios.some(s =>\n            s.principal === scenario.principal &&\n            s.interestRate === scenario.interestRate &&\n            s.amortizationMonths === scenario.amortizationMonths &&\n            s.paymentFrequency === scenario.paymentFrequency &&\n            s.extraPaymentAmount === scenario.extraPaymentAmount &&\n            s.extraPaymentFrequency === scenario.extraPaymentFrequency\n        );\n\n        if (!exists) {\n            this.scenarios.push(scenario);\n\n            // Calculate savings relative to base scenario\n            if (this.scenarios.length > 1) {\n                const baseScenario = this.scenarios[0];\n                this.scenarios.forEach(s => {\n                    s.savings = baseScenario.totalCost - s.totalCost;\n                });\n            }\n\n            // Update the entire comparison section to show share button\n            this.updateComparisonSection();\n\n            eventBus.emit(EVENTS.NOTIFICATION, {\n                message: 'Added to comparison!',\n                type: 'success'\n            });\n\n            // Re-attach share button listener after DOM update\n            this.attachShareButtonListener();\n        } else {\n            eventBus.emit(EVENTS.NOTIFICATION, {\n                message: 'This scenario already exists in comparison',\n                type: 'info'\n            });\n        }\n    }\n\n    loadSharedScenarios() {\n        try {\n            const sharedScenarios = parseScenariosFromUrl();\n            if (sharedScenarios && sharedScenarios.length > 0) {\n                // We need to recalculate all derived values for each scenario\n                this.scenarios = [];\n\n                // Process each scenario\n                sharedScenarios.forEach((scenarioData, index) => {\n                    // Calculate the results for this scenario\n                    const result = calculateMortgage({\n                        principal: scenarioData.principal,\n                        interestRate: scenarioData.interestRate,\n                        amortizationMonths: scenarioData.amortizationMonths,\n                        paymentFrequency: scenarioData.paymentFrequency\n                    });\n\n                    let prepaymentResult = null;\n                    if (scenarioData.extraPaymentAmount > 0) {\n                        prepaymentResult = calculateWithPrepayment({\n                            principal: scenarioData.principal,\n                            interestRate: scenarioData.interestRate,\n                            amortizationMonths: scenarioData.amortizationMonths,\n                            paymentFrequency: scenarioData.paymentFrequency,\n                            extraPayment: scenarioData.extraPaymentAmount,\n                            extraPaymentFrequency: scenarioData.extraPaymentFrequency\n                        });\n                    }\n\n                    // Generate scenario name\n                    let scenarioName = index === 0 ? 'Base Mortgage' : '';\n                    if (index > 0) {\n                        const baseScenario = sharedScenarios[0];\n                        const differences = [];\n\n                        if (scenarioData.principal !== baseScenario.principal) {\n                            differences.push(`${formatCAD(scenarioData.principal)} loan`);\n                        }\n                        if (scenarioData.interestRate !== baseScenario.interestRate) {\n                            differences.push(`${scenarioData.interestRate}% rate`);\n                        }\n                        if (scenarioData.amortizationMonths !== baseScenario.amortizationMonths) {\n                            differences.push(`${scenarioData.amortizationMonths / 12}yr`);\n                        }\n                        if (scenarioData.paymentFrequency !== baseScenario.paymentFrequency) {\n                            differences.push(scenarioData.paymentFrequency);\n                        }\n                        if (scenarioData.extraPaymentAmount > 0) {\n                            differences.push(`+${formatCAD(scenarioData.extraPaymentAmount)}`);\n                        }\n\n                        scenarioName = differences.slice(0, 2).join(', ');\n                    } else if (scenarioData.extraPaymentAmount > 0) {\n                        scenarioName = `Base + ${formatCAD(scenarioData.extraPaymentAmount)}`;\n                    }\n\n                    // Create full scenario object\n                    const scenario = {\n                        name: scenarioName,\n                        principal: scenarioData.principal,\n                        interestRate: scenarioData.interestRate,\n                        amortizationMonths: scenarioData.amortizationMonths,\n                        paymentFrequency: scenarioData.paymentFrequency,\n                        extraPaymentAmount: scenarioData.extraPaymentAmount,\n                        extraPaymentFrequency: scenarioData.extraPaymentFrequency,\n                        regularPayment: result.regularPayment,\n                        totalPayment: result.regularPayment + (scenarioData.extraPaymentAmount || 0),\n                        totalInterest: prepaymentResult?.totalInterest || result.totalInterest,\n                        totalCost: prepaymentResult?.totalCost || result.totalCost,\n                        payoffMonths: prepaymentResult?.actualPayoffMonths || scenarioData.amortizationMonths,\n                        savings: 0\n                    };\n\n                    this.scenarios.push(scenario);\n                });\n\n                // Calculate savings relative to base scenario\n                if (this.scenarios.length > 0) {\n                    const baseScenario = this.scenarios[0];\n                    this.scenarios.forEach(scenario => {\n                        scenario.savings = baseScenario.totalCost - scenario.totalCost;\n                    });\n                }\n\n                // Load the first scenario into the calculator\n                if (sharedScenarios[0]) {\n                    const firstScenario = sharedScenarios[0];\n                    this.state.principal = firstScenario.principal;\n                    this.state.interestRate = firstScenario.interestRate;\n                    this.state.amortizationMonths = firstScenario.amortizationMonths;\n                    this.state.paymentFrequency = firstScenario.paymentFrequency;\n                    this.state.extraPaymentAmount = firstScenario.extraPaymentAmount || 0;\n                    this.state.extraPaymentFrequency = firstScenario.extraPaymentFrequency || 'per-payment';\n                }\n\n                // Clean the URL after loading\n                cleanUrl();\n\n                eventBus.emit(EVENTS.NOTIFICATION, {\n                    message: `Loaded ${sharedScenarios.length} shared scenario${sharedScenarios.length > 1 ? 's' : ''}!`,\n                    type: 'success'\n                });\n            }\n        } catch (error) {\n            logger.error('Failed to load shared scenarios:', error);\n        }\n    }\n\n    attachShareButtonListener() {\n        const shareBtn = document.getElementById('share-scenarios');\n        if (shareBtn) {\n            shareBtn.addEventListener('click', () => this.shareScenarios());\n        }\n    }\n\n    async shareScenarios() {\n        if (this.scenarios.length === 0) {\n            eventBus.emit(EVENTS.NOTIFICATION, {\n                message: 'No scenarios to share',\n                type: 'info'\n            });\n            return;\n        }\n\n        try {\n            const shareableUrl = generateShareableUrl(this.scenarios);\n            const copied = await copyToClipboard(shareableUrl);\n\n            if (copied) {\n                eventBus.emit(EVENTS.NOTIFICATION, {\n                    message: 'Share link copied to clipboard!',\n                    type: 'success'\n                });\n            } else {\n                // Fallback: show the URL in a prompt\n                prompt('Copy this link to share:', shareableUrl);\n            }\n        } catch (error) {\n            logger.error('Failed to generate share link:', error);\n            eventBus.emit(EVENTS.NOTIFICATION, {\n                message: 'Failed to generate share link',\n                type: 'error'\n            });\n        }\n    }\n}\n\nexport default CalculatorModern;\n","/**\n * Amortization Schedule Component\n * Displays payment-by-payment breakdown\n */\n\nimport { formatCAD } from '../services/currencyFormatter.js';\nimport { generateAmortizationSchedule } from '../services/mortgageCalculator.js';\n\nexport class AmortizationSchedule {\n    constructor(containerId) {\n        this.container = document.getElementById(containerId);\n        this.schedule = [];\n        this.pageSize = 50;\n        this.currentPage = 0;\n    }\n\n    show(mortgageParams) {\n        this.schedule = generateAmortizationSchedule(mortgageParams);\n        this.currentPage = 0;\n        this.render();\n    }\n\n    render() {\n        if (this.schedule.length === 0) {\n            this.container.innerHTML = '';\n            return;\n        }\n\n        const start = this.currentPage * this.pageSize;\n        const end = Math.min(start + this.pageSize, this.schedule.length);\n        const pageData = this.schedule.slice(start, end);\n\n        this.container.innerHTML = `\n      <div class=\"card mt-6\">\n        <div class=\"flex justify-between items-center mb-6\">\n          <h3 class=\"text-xl font-bold text-gray-900 dark:text-white\">\n            Amortization Schedule\n          </h3>\n          <button id=\"close-schedule\" class=\"text-gray-500 hover:text-gray-700 dark:text-gray-400 dark:hover:text-gray-200\">\n            ✕ Close\n          </button>\n        </div>\n\n        <div class=\"mb-4 flex justify-between items-center\">\n          <div class=\"text-sm text-gray-600 dark:text-gray-400\">\n            Showing payments ${start + 1}-${end} of ${this.schedule.length}\n          </div>\n          <div class=\"flex gap-2\">\n            <button id=\"prev-page\" class=\"btn btn-secondary text-sm\" ${this.currentPage === 0 ? 'disabled' : ''}>\n              Previous\n            </button>\n            <button id=\"next-page\" class=\"btn btn-secondary text-sm\" ${end >= this.schedule.length ? 'disabled' : ''}>\n              Next\n            </button>\n          </div>\n        </div>\n\n        <div class=\"overflow-x-auto\">\n          <table class=\"min-w-full divide-y divide-gray-200 dark:divide-gray-700\">\n            <thead class=\"bg-gray-50 dark:bg-gray-800\">\n              <tr>\n                <th class=\"px-4 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-400 uppercase\">#</th>\n                <th class=\"px-4 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-400 uppercase\">Date</th>\n                <th class=\"px-4 py-3 text-right text-xs font-medium text-gray-500 dark:text-gray-400 uppercase\">Principal</th>\n                <th class=\"px-4 py-3 text-right text-xs font-medium text-gray-500 dark:text-gray-400 uppercase\">Interest</th>\n                <th class=\"px-4 py-3 text-right text-xs font-medium text-gray-500 dark:text-gray-400 uppercase\">Payment</th>\n                <th class=\"px-4 py-3 text-right text-xs font-medium text-gray-500 dark:text-gray-400 uppercase\">Balance</th>\n              </tr>\n            </thead>\n            <tbody class=\"bg-white dark:bg-gray-900 divide-y divide-gray-200 dark:divide-gray-700\">\n              ${pageData.map((payment) => `\n                <tr class=\"hover:bg-gray-50 dark:hover:bg-gray-800\">\n                  <td class=\"px-4 py-3 whitespace-nowrap text-sm text-gray-900 dark:text-white\">\n                    ${payment.paymentNumber}\n                  </td>\n                  <td class=\"px-4 py-3 whitespace-nowrap text-sm text-gray-600 dark:text-gray-400\">\n                    ${payment.paymentDate}\n                  </td>\n                  <td class=\"px-4 py-3 whitespace-nowrap text-sm text-right text-gray-900 dark:text-white\">\n                    ${formatCAD(payment.principalPayment)}\n                  </td>\n                  <td class=\"px-4 py-3 whitespace-nowrap text-sm text-right text-gray-900 dark:text-white\">\n                    ${formatCAD(payment.interestPayment)}\n                  </td>\n                  <td class=\"px-4 py-3 whitespace-nowrap text-sm text-right font-medium text-gray-900 dark:text-white\">\n                    ${formatCAD(payment.totalPayment)}\n                  </td>\n                  <td class=\"px-4 py-3 whitespace-nowrap text-sm text-right ${payment.remainingBalance === 0 ? 'text-green-600 dark:text-green-400 font-bold' : 'text-gray-900 dark:text-white'}\">\n                    ${formatCAD(payment.remainingBalance)}\n                  </td>\n                </tr>\n              `).join('')}\n            </tbody>\n          </table>\n        </div>\n\n        <div class=\"mt-4 flex justify-between items-center\">\n          <button id=\"download-schedule\" class=\"btn btn-secondary text-sm\">\n            Download CSV\n          </button>\n          <div class=\"text-xs text-gray-500 dark:text-gray-400\">\n            Page ${this.currentPage + 1} of ${Math.ceil(this.schedule.length / this.pageSize)}\n          </div>\n        </div>\n      </div>\n    `;\n\n        this.attachEventListeners();\n    }\n\n    attachEventListeners() {\n        const closeBtn = document.getElementById('close-schedule');\n        if (closeBtn) {\n            closeBtn.addEventListener('click', () => {\n                this.container.innerHTML = '';\n            });\n        }\n\n        const prevBtn = document.getElementById('prev-page');\n        if (prevBtn) {\n            prevBtn.addEventListener('click', () => {\n                if (this.currentPage > 0) {\n                    this.currentPage--;\n                    this.render();\n                }\n            });\n        }\n\n        const nextBtn = document.getElementById('next-page');\n        if (nextBtn) {\n            nextBtn.addEventListener('click', () => {\n                const maxPage = Math.ceil(this.schedule.length / this.pageSize) - 1;\n                if (this.currentPage < maxPage) {\n                    this.currentPage++;\n                    this.render();\n                }\n            });\n        }\n\n        const downloadBtn = document.getElementById('download-schedule');\n        if (downloadBtn) {\n            downloadBtn.addEventListener('click', () => {\n                this.downloadCSV();\n            });\n        }\n    }\n\n    downloadCSV() {\n        const headers = ['Payment #', 'Date', 'Principal', 'Interest', 'Total Payment', 'Remaining Balance'];\n        const rows = this.schedule.map((p) => [\n            p.paymentNumber,\n            p.paymentDate,\n            p.principalPayment,\n            p.interestPayment,\n            p.totalPayment,\n            p.remainingBalance,\n        ]);\n\n        const csv = [\n            headers.join(','),\n            ...rows.map((row) => row.join(',')),\n        ].join('\\n');\n\n        const blob = new Blob([csv], { type: 'text/csv' });\n        const url = URL.createObjectURL(blob);\n        const a = document.createElement('a');\n        a.href = url;\n        a.download = `amortization-schedule-${new Date().toISOString().split('T')[0]}.csv`;\n        a.click();\n        URL.revokeObjectURL(url);\n    }\n}\n\nexport default AmortizationSchedule;\n\n","/**\n * Info Modal Component\n * Displays calculation methodology and disclaimer\n */\n\nexport class InfoModal {\n    constructor() {\n        this.modalId = 'info-modal';\n        this.isOpen = false;\n        this.render();\n        this.attachEventListeners();\n    }\n\n    render() {\n        const modal = document.createElement('div');\n        modal.id = this.modalId;\n        modal.className = 'fixed inset-0 z-50 hidden';\n        modal.setAttribute('role', 'dialog');\n        modal.setAttribute('aria-modal', 'true');\n        modal.setAttribute('aria-labelledby', 'modal-title');\n        modal.setAttribute('aria-describedby', 'modal-description');\n        modal.innerHTML = `\n            <div class=\"fixed inset-0 bg-black bg-opacity-50 transition-opacity\" id=\"modal-backdrop\" aria-hidden=\"true\"></div>\n            <div class=\"fixed inset-0 z-10 overflow-y-auto\">\n                <div class=\"flex min-h-full items-center justify-center p-4\">\n                    <div class=\"relative transform overflow-hidden rounded-lg bg-white dark:bg-gray-800 text-left shadow-xl transition-all sm:my-8 sm:w-full sm:max-w-3xl\" role=\"document\">\n                        <div class=\"bg-white dark:bg-gray-800 px-4 pb-4 pt-5 sm:p-6 sm:pb-4\">\n                            <div class=\"sm:flex sm:items-start\">\n                                <div class=\"mt-3 text-center sm:ml-4 sm:mt-0 sm:text-left w-full\">\n                                    <h3 id=\"modal-title\" class=\"text-2xl font-semibold leading-6 text-gray-900 dark:text-white mb-4\">\n                                        How This Calculator Works\n                                    </h3>\n                                    <div id=\"modal-description\" class=\"sr-only\">\n                                        Information about how the mortgage calculator performs calculations and important disclaimers\n                                    </div>\n                                    \n                                    <div class=\"mt-4 space-y-6 text-sm text-gray-700 dark:text-gray-300\">\n                                        <section>\n                                            <h4 class=\"font-semibold text-lg mb-2 text-gray-900 dark:text-white\">📊 Calculation Method</h4>\n                                            <p class=\"mb-3\">This calculator uses the standard mortgage payment formula:</p>\n                                            <div class=\"bg-gray-100 dark:bg-gray-700 p-4 rounded-lg font-mono text-xs overflow-x-auto\">\n                                                PMT = P × [r(1 + r)ⁿ] / [(1 + r)ⁿ - 1]\n                                            </div>\n                                            <ul class=\"mt-3 space-y-2 ml-4\">\n                                                <li>• PMT = Regular payment amount</li>\n                                                <li>• P = Principal loan amount</li>\n                                                <li>• r = Interest rate per payment period</li>\n                                                <li>• n = Total number of payments</li>\n                                            </ul>\n                                        </section>\n\n                                        <section>\n                                            <h4 class=\"font-semibold text-lg mb-2 text-gray-900 dark:text-white\">🏦 Interest Compounding</h4>\n                                            <p>By default, this calculator uses <strong>semi-annual compounding</strong>, which is standard in Canada. The interest rate is compounded twice per year and then converted to the payment frequency you select.</p>\n                                            <p class=\"mt-2\">For other regions, you may need to adjust calculations based on local standards (e.g., monthly compounding in the US).</p>\n                                        </section>\n\n                                        <section>\n                                            <h4 class=\"font-semibold text-lg mb-2 text-gray-900 dark:text-white\">💰 Prepayment Calculations</h4>\n                                            <p>When you add extra payments:</p>\n                                            <ul class=\"mt-2 space-y-1 ml-4\">\n                                                <li>• Extra payments go directly to principal reduction</li>\n                                                <li>• Interest is recalculated on the reduced balance</li>\n                                                <li>• This can significantly reduce total interest and loan duration</li>\n                                                <li>• The calculator shows exact savings in time and money</li>\n                                            </ul>\n                                        </section>\n\n                                        <section>\n                                            <h4 class=\"font-semibold text-lg mb-2 text-gray-900 dark:text-white\">🔗 Shareable Links</h4>\n                                            <p>You can share your comparison scenarios with others. The share feature:</p>\n                                            <ul class=\"mt-2 space-y-1 ml-4\">\n                                                <li>• Encodes all scenario data in the URL</li>\n                                                <li>• No data is stored on any server</li>\n                                                <li>• Links work instantly without any backend</li>\n                                                <li>• Data is compressed to keep URLs manageable</li>\n                                            </ul>\n                                        </section>\n\n                                        <section class=\"border-t pt-4 dark:border-gray-700\">\n                                            <h4 class=\"font-semibold text-lg mb-2 text-red-600 dark:text-red-400\">⚠️ Important Disclaimer</h4>\n                                            <div class=\"bg-red-50 dark:bg-red-900/20 border border-red-200 dark:border-red-800 rounded-lg p-4\">\n                                                <p class=\"font-semibold mb-2\">This calculator is for educational and informational purposes only.</p>\n                                                <ul class=\"space-y-2 text-sm\">\n                                                    <li>• Results are estimates based on the inputs provided</li>\n                                                    <li>• Actual payments may vary due to fees, insurance, or other factors</li>\n                                                    <li>• Does not include property taxes, insurance, or other costs</li>\n                                                    <li>• Not financial advice - consult with qualified professionals</li>\n                                                    <li>• Verify all calculations with your lender before making decisions</li>\n                                                </ul>\n                                            </div>\n                                        </section>\n\n                                        <section>\n                                            <h4 class=\"font-semibold text-lg mb-2 text-gray-900 dark:text-white\">🌍 Regional Differences</h4>\n                                            <p>Mortgage calculations can vary by country:</p>\n                                            <ul class=\"mt-2 space-y-1 ml-4 text-sm\">\n                                                <li>• <strong>Canada:</strong> Semi-annual compounding (default)</li>\n                                                <li>• <strong>United States:</strong> Monthly compounding</li>\n                                                <li>• <strong>UK/Australia:</strong> Daily/Monthly compounding</li>\n                                                <li>• <strong>Fixed vs Variable:</strong> This calculator assumes fixed rates</li>\n                                            </ul>\n                                        </section>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"bg-gray-50 dark:bg-gray-700 px-4 py-3 sm:flex sm:flex-row-reverse sm:px-6\">\n                            <button type=\"button\" id=\"close-info-modal\" class=\"inline-flex w-full justify-center rounded-md bg-primary-600 px-3 py-2 text-sm font-semibold text-white shadow-sm hover:bg-primary-700 sm:ml-3 sm:w-auto focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-primary-500\" aria-label=\"Close information modal\">\n                                Got it!\n                            </button>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        `;\n        \n        document.body.appendChild(modal);\n    }\n\n    attachEventListeners() {\n        const closeBtn = document.getElementById('close-info-modal');\n        const backdrop = document.getElementById('modal-backdrop');\n        \n        if (closeBtn) {\n            closeBtn.addEventListener('click', () => this.close());\n        }\n        \n        if (backdrop) {\n            backdrop.addEventListener('click', () => this.close());\n        }\n\n        // Close on escape key\n        document.addEventListener('keydown', (e) => {\n            if (e.key === 'Escape' && this.isOpen) {\n                this.close();\n            }\n        });\n    }\n\n    open() {\n        const modal = document.getElementById(this.modalId);\n        if (modal) {\n            modal.classList.remove('hidden');\n            this.isOpen = true;\n            document.body.style.overflow = 'hidden';\n\n            // Focus trap: Store previously focused element\n            this.previouslyFocused = document.activeElement;\n\n            // Focus the close button initially for accessibility\n            const closeBtn = document.getElementById('close-info-modal');\n            if (closeBtn) {\n                closeBtn.focus();\n            }\n\n            // Trap focus within modal\n            this.setupFocusTrap(modal);\n        }\n    }\n\n    close() {\n        const modal = document.getElementById(this.modalId);\n        if (modal) {\n            modal.classList.add('hidden');\n            this.isOpen = false;\n            document.body.style.overflow = '';\n\n            // Remove focus trap\n            this.removeFocusTrap();\n\n            // Return focus to previously focused element\n            if (this.previouslyFocused && typeof this.previouslyFocused.focus === 'function') {\n                this.previouslyFocused.focus();\n            }\n        }\n    }\n\n    setupFocusTrap(modal) {\n        // Find all focusable elements\n        const focusableElements = modal.querySelectorAll(\n            'button, [href], input, select, textarea, [tabindex]:not([tabindex=\"-1\"])'\n        );\n\n        if (focusableElements.length === 0) return;\n\n        this.firstFocusable = focusableElements[0];\n        this.lastFocusable = focusableElements[focusableElements.length - 1];\n\n        // Handle Tab key to trap focus\n        this.handleTabKey = (e) => {\n            if (e.key !== 'Tab') return;\n\n            if (e.shiftKey) {\n                // Shift + Tab\n                if (document.activeElement === this.firstFocusable) {\n                    e.preventDefault();\n                    this.lastFocusable.focus();\n                }\n            } else {\n                // Tab\n                if (document.activeElement === this.lastFocusable) {\n                    e.preventDefault();\n                    this.firstFocusable.focus();\n                }\n            }\n        };\n\n        modal.addEventListener('keydown', this.handleTabKey);\n    }\n\n    removeFocusTrap() {\n        if (this.handleTabKey) {\n            const modal = document.getElementById(this.modalId);\n            if (modal) {\n                modal.removeEventListener('keydown', this.handleTabKey);\n            }\n            this.handleTabKey = null;\n        }\n    }\n}\n\nexport default InfoModal;\n","/**\n * Main entry point for the mortgage calculator application\n */\n\nimport './styles/main.css';\nimport './styles/themes.css';\nimport './styles/responsive.css';\n\nimport storageService from './services/storage.js';\nimport eventBus, { EVENTS } from './utils/eventBus.js';\nimport logger from './utils/logger.js';\nimport CalculatorModern from './components/CalculatorModern.js';\n// Comparison and prepayment are now integrated into CalculatorModern\nimport { AmortizationSchedule } from './components/AmortizationSchedule.js';\nimport InfoModal from './components/InfoModal.js';\n// MortgageScenario is handled internally by components\n\n// Global app state\nconst app = {\n    calculator: null,\n    // Comparison table is integrated into CalculatorModern\n    amortizationSchedule: null,\n    infoModal: null,\n};\n\n// Initialize theme\nfunction initializeTheme() {\n    const preferences = storageService.getPreferences();\n    const theme = preferences.theme || 'system';\n\n    if (theme === 'dark' || (theme === 'system' && window.matchMedia('(prefers-color-scheme: dark)').matches)) {\n        document.documentElement.classList.add('dark');\n    }\n\n    // Theme toggle button\n    const themeToggle = document.getElementById('theme-toggle');\n    if (themeToggle) {\n        themeToggle.addEventListener('click', () => {\n            document.documentElement.classList.toggle('dark');\n            const newTheme = document.documentElement.classList.contains('dark') ? 'dark' : 'light';\n            storageService.savePreferences({ ...preferences, theme: newTheme });\n            eventBus.emit(EVENTS.THEME_CHANGED, newTheme);\n        });\n    }\n\n    // Info button\n    const infoButton = document.getElementById('info-button');\n    if (infoButton) {\n        infoButton.addEventListener('click', () => {\n            if (app.infoModal) {\n                app.infoModal.open();\n            }\n        });\n    }\n}\n\n// Setup event listeners for component interactions\nfunction setupEventListeners() {\n    // CalculatorModern handles its own comparison and schedule buttons\n\n    // Error handling\n    eventBus.on(EVENTS.ERROR_OCCURRED, (error) => {\n        showNotification(error.message || 'An error occurred', 'error');\n    });\n\n    // Notification handling\n    eventBus.on(EVENTS.NOTIFICATION, (data) => {\n        showNotification(data.message, data.type || 'info');\n    });\n\n    // Schedule show event\n    eventBus.on('schedule:show', (data) => {\n        if (app.amortizationSchedule) {\n            app.amortizationSchedule.show(data);\n            document.getElementById('amortization-container')?.scrollIntoView({ behavior: 'smooth' });\n        }\n    });\n}\n\n// Show notification toast with stacking\nlet activeNotifications = [];\n\nfunction showNotification(message, type = 'info') {\n    const notification = document.createElement('div');\n    const notificationId = Date.now();\n\n    // More subtle, seamless color scheme\n    const typeClasses = {\n        success: 'bg-gray-900 dark:bg-gray-100 text-white dark:text-gray-900 border border-gray-700 dark:border-gray-300',\n        error: 'bg-red-50 dark:bg-red-900/20 text-red-900 dark:text-red-100 border border-red-200 dark:border-red-800',\n        info: 'bg-gray-100 dark:bg-gray-800 text-gray-900 dark:text-gray-100 border border-gray-200 dark:border-gray-700'\n    };\n\n    notification.className = `fixed right-4 z-50 px-4 py-3 rounded-lg shadow-lg backdrop-blur-sm animate-fade-in ${typeClasses[type] || typeClasses.info}`;\n    notification.dataset.notificationId = notificationId;\n\n    // Calculate position based on existing notifications\n    const existingCount = activeNotifications.length;\n    const topOffset = 16 + (existingCount * 76); // 16px base + 76px per notification\n    notification.style.top = `${topOffset}px`;\n    notification.style.transition = 'all 0.3s ease-out';\n\n    // Add icon and message\n    const icons = {\n        success: '✓',\n        error: '✕',\n        info: 'ℹ'\n    };\n\n    notification.innerHTML = `\n        <div class=\"flex items-center gap-3\">\n            <span class=\"text-lg\">${icons[type] || icons.info}</span>\n            <span class=\"text-sm font-medium\">${message}</span>\n        </div>\n    `;\n\n    document.body.appendChild(notification);\n    activeNotifications.push(notificationId);\n\n    // Smooth fade out animation\n    setTimeout(() => {\n        notification.style.opacity = '0';\n        notification.style.transform = 'translateY(-10px)';\n\n        setTimeout(() => {\n            notification.remove();\n            // Remove from active notifications\n            activeNotifications = activeNotifications.filter(id => id !== notificationId);\n            // Reposition remaining notifications\n            repositionNotifications();\n        }, 300);\n    }, 2700);\n}\n\nfunction repositionNotifications() {\n    const notifications = document.querySelectorAll('[data-notification-id]');\n    notifications.forEach((notif, index) => {\n        const topOffset = 16 + (index * 76);\n        notif.style.top = `${topOffset}px`;\n    });\n}\n\n// Create amortization container if it doesn't exist\nfunction ensureContainers() {\n    const main = document.querySelector('main');\n    if (main && !document.getElementById('amortization-container')) {\n        const container = document.createElement('div');\n        container.id = 'amortization-container';\n        main.appendChild(container);\n    }\n}\n\n// Initialize application\nfunction init() {\n    logger.info('Initializing Canadian Mortgage Calculator');\n\n    initializeTheme();\n    ensureContainers();\n\n    // Load saved preferences\n    const preferences = storageService.getPreferences();\n    logger.debug('Loaded preferences', preferences);\n\n    // Initialize components\n    app.calculator = new CalculatorModern('calculator-container');\n    logger.info('Modern calculator component initialized');\n\n    // Comparison table is now integrated into the modern calculator\n    // app.comparisonTable = new ComparisonTableComponent('comparison-container');\n    // logger.info('Comparison table initialized');\n\n    app.amortizationSchedule = new AmortizationSchedule('amortization-container');\n    logger.info('Amortization schedule initialized');\n\n    // Initialize info modal\n    app.infoModal = new InfoModal();\n    logger.info('Info modal initialized');\n\n    // Setup event listeners\n    setupEventListeners();\n\n    // Load and display version info in footer\n    loadVersionInfo();\n\n    logger.info('Application initialized successfully');\n}\n\n// Load and display version information in footer\nasync function loadVersionInfo() {\n    try {\n        // Use base path for GitHub Pages deployment\n        const basePath = import.meta.env.BASE_URL || '/';\n        const versionPath = `${basePath}version.json`.replace(/\\/\\//g, '/');\n        const response = await fetch(versionPath);\n        if (response.ok) {\n            const versionInfo = await response.json();\n            updateFooterWithVersion(versionInfo);\n        } else {\n            throw new Error('Version file not found');\n        }\n    } catch (error) {\n        logger.debug('Could not load version info', error);\n        // Try to get basic info from environment or fallback\n        updateFooterWithVersion({\n            version: 'dev',\n            buildTimeLocal: new Date().toLocaleString()\n        });\n    }\n}\n\nfunction updateFooterWithVersion(info) {\n    const footer = document.querySelector('footer');\n    if (!footer) return;\n\n    // Find or create version info paragraph\n    let versionPara = footer.querySelector('.version-info');\n    if (!versionPara) {\n        versionPara = document.createElement('p');\n        versionPara.className = 'version-info text-center text-xs text-gray-400 dark:text-gray-500 mt-2';\n        footer.querySelector('.max-w-7xl').appendChild(versionPara);\n    }\n\n    const parts = [];\n    if (info.version && info.version !== 'unknown') {\n        // Show release version prominently if it's a release\n        if (info.isRelease) {\n            parts.push(`Release: ${info.version}`);\n        } else {\n            // For dev builds, show as version\n            parts.push(`Version: ${info.version}`);\n        }\n    }\n    if (info.buildTimeLocal) {\n        parts.push(`Deployed: ${info.buildTimeLocal}`);\n    }\n\n    if (parts.length > 0) {\n        versionPara.textContent = parts.join(' • ');\n    }\n}\n\n// Start the application\nif (document.readyState === 'loading') {\n    document.addEventListener('DOMContentLoaded', init);\n} else {\n    init();\n}\n\n// Export for testing\nexport { init };\n\n"],"names":["MORTGAGE_CONSTANTS","StorageService","test","key","item","error","value","scenarios","comparisons","preferences","scenario","storageService","EventBus","event","callback","cb","onceCallback","args","data","EVENTS","eventBus","LOG_LEVELS","Logger","level","message","logger","Decimal","decimal","add","a","b","subtract","multiply","divide","power","round","decimalPlaces","MortgageCalculatorError","code","CalculationError","calculateMortgage","params","principal","interestRate","amortizationMonths","paymentFrequency","annualRate","semiAnnualRate","paymentsPerYear","onePlusSemi","effectiveAnnual","onePlusAnnual","periodRate","totalPayments","onePlusR","onePlusRPowN","numerator","denominator","payment","totalPaid","totalInterest","today","payoffDate","generateAmortizationSchedule","result","schedule","balance","i","interestPayment","principalPayment","paymentDate","monthsElapsed","calculateWithPrepayment","extraPayment","extraPaymentFrequency","baseCalc","regularPayment","paymentCount","totalInterestPaid","maxPayments","extra","actualPayoffMonths","totalInterestSaved","monthsSaved","CAD_FORMATTER","formatCAD","ERROR_MESSAGES","validateMortgageInputs","inputs","errors","warnings","fieldErrors","isHighRatio","evaluateExpression","expr","isExpression","str","encodeScenarios","compactData","s","parts","decodeScenarios","encoded","base64","scenarioStr","generateShareableUrl","parseScenariosFromUrl","cleanUrl","url","copyToClipboard","text","textArea","success","CalculatorModern","containerId","_a","targetPayment","difference","percentDiff","canAfford","savings","yearsSaved","totalPaymentWithExtra","newPayoffYears","newPayoffMonths","originalYears","originalMonths","index","baseScenario","remainingMonths","id","element","e","resetBtn","addToComparisonBtn","viewScheduleBtn","validation","fieldId","field","errorMessage","errorDiv","baseResultsDiv","prepaymentSection","comparisonDiv","comparisonTable","comparisonContainer","addBtn","input","num","totalPayment","scenarioName","differences","sharedScenarios","scenarioData","prepaymentResult","firstScenario","shareBtn","shareableUrl","AmortizationSchedule","mortgageParams","start","end","pageData","closeBtn","prevBtn","nextBtn","maxPage","downloadBtn","headers","rows","p","csv","row","blob","InfoModal","modal","backdrop","focusableElements","app","initializeTheme","theme","themeToggle","newTheme","infoButton","setupEventListeners","showNotification","activeNotifications","type","notification","notificationId","typeClasses","topOffset","icons","repositionNotifications","notif","ensureContainers","main","container","init","loadVersionInfo","versionPath","response","versionInfo","updateFooterWithVersion","info","footer","versionPara"],"mappings":"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"}